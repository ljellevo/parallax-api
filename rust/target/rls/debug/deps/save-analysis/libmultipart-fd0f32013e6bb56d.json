{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1","program":"/Users/ludvigellevold/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","multipart","/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"buf_redux\"","--cfg","feature=\"httparse\"","--cfg","feature=\"quick-error\"","--cfg","feature=\"safemem\"","--cfg","feature=\"server\"","--cfg","feature=\"twoway\"","-C","metadata=fd0f32013e6bb56d","-C","extra-filename=-fd0f32013e6bb56d","--out-dir","/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps","-L","dependency=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps","--extern","buf_redux=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libbuf_redux-f3228aab994fcd12.rmeta","--extern","httparse=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libhttparse-e78841e81654c8b5.rmeta","--extern","log=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/liblog-a02fae6c831132b1.rmeta","--extern","mime=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libmime-d02720b6d2d1e0e1.rmeta","--extern","mime_guess=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libmime_guess-ad7d6724e4d7e091.rmeta","--extern","quick_error=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libquick_error-d94e0afca97fe99c.rmeta","--extern","rand=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/librand-8162ffd8969b1940.rmeta","--extern","safemem=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libsafemem-c2538fabfa636e4c.rmeta","--extern","tempfile=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libtempfile-5ced10c41902ac7d.rmeta","--extern","twoway=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libtwoway-34f5364ff4da58ac.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ludvigellevold/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libmultipart-fd0f32013e6bb56d.rmeta"},"prelude":{"crate_id":{"name":"multipart","disambiguator":[5521573997952598762,4196460942646031075]},"crate_root":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src","external_crates":[{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5815253344629835555,6636975684073219588]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8640467824410056948,4953413506987166411]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5943306621316194396,469742592009193771]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[866086214759782827,14885900198568415096]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17595028197444962531,15872922328711317016]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18318652027981566244,3398209746559794375]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[175364088999297126,4756653861943254916]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13005419395690637486,15658597275635978548]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[4557001621059672485,7996168842663447033]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16661770112559451689,541399752796634085]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13518603241875248388,3599148159379700321]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1064299617287830167,4730297842045402749]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16564978169562768493,770119258392268500]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7756841733123193348,6168259298993529673]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":15,"id":{"name":"log","disambiguator":[1185960575358268128,12463401203215204625]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[11132457372621768611,10169276994104157058]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":17,"id":{"name":"mime","disambiguator":[2529473460999829012,15600422226560269005]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":18,"id":{"name":"log","disambiguator":[18185193510617424094,2460204361763657992]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":19,"id":{"name":"mime_guess","disambiguator":[18033712560056059783,8348147806932868415]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":20,"id":{"name":"phf","disambiguator":[8831633099146252180,11795432016611431379]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":21,"id":{"name":"phf_shared","disambiguator":[2322674856384119484,9458704706837348865]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":22,"id":{"name":"siphasher","disambiguator":[16880972931089089737,6753285573736160644]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":23,"id":{"name":"unicase","disambiguator":[12498455003886648723,16256863554804238691]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[7930045040201704200,15492530885618795856]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":25,"id":{"name":"rand_jitter","disambiguator":[1875678275070630401,12688433144791978104]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":26,"id":{"name":"rand_core","disambiguator":[16671743678196411721,15503656161364029853]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[2874431681810082900,12949148544681294335]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":28,"id":{"name":"rand_os","disambiguator":[14284783610743152942,2592838805190445623]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":29,"id":{"name":"rand_isaac","disambiguator":[12937872845254329051,18418701678514940462]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":30,"id":{"name":"rand_core","disambiguator":[13995489513554193006,15321489788497501590]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":31,"id":{"name":"rand_chacha","disambiguator":[7555749374386093779,3680919515390372413]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":32,"id":{"name":"rand_hc","disambiguator":[10285301668116195076,17498526654921457272]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":33,"id":{"name":"rand_pcg","disambiguator":[13049260470419449625,12002215174558192225]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":34,"id":{"name":"rand_xorshift","disambiguator":[13853328418653734981,14737127368617661819]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":35,"id":{"name":"tempfile","disambiguator":[14244696385264824297,10486003329747944785]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":36,"id":{"name":"remove_dir_all","disambiguator":[5345581448233000146,18301686472527194739]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":37,"id":{"name":"rand","disambiguator":[2443735783040525269,13175843390563184002]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":38,"id":{"name":"rand_core","disambiguator":[5120035803958543139,15107791716408192616]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":39,"id":{"name":"getrandom","disambiguator":[16493007559624411141,10866743631083758315]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":40,"id":{"name":"rand_chacha","disambiguator":[256074804433847735,1952607292012101020]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":41,"id":{"name":"ppv_lite86","disambiguator":[13308419580711159939,15335064784856223645]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":42,"id":{"name":"quick_error","disambiguator":[4043584273488408248,10985912211069393143]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","num":43,"id":{"name":"safemem","disambiguator":[12241825122724590134,172752142184687969]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","num":44,"id":{"name":"buf_redux","disambiguator":[13850373484317681987,11159130708963616273]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","num":45,"id":{"name":"memchr","disambiguator":[5891368277760816841,7708365609824359216]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","num":46,"id":{"name":"httparse","disambiguator":[13661918320112205102,13528399658008989133]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","num":47,"id":{"name":"twoway","disambiguator":[6139815540692869651,16207362621595053763]}}],"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":344,"byte_end":3987,"line_start":7,"line_end":128,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4986,"byte_end":4998,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"alias_span":null,"name":"FieldHeaders","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5000,"byte_end":5014,"line_start":26,"line_end":26,"column_start":37,"column_end":51},"alias_span":null,"name":"MultipartField","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5016,"byte_end":5029,"line_start":26,"line_end":26,"column_start":53,"column_end":66},"alias_span":null,"name":"MultipartData","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5031,"byte_end":5040,"line_start":26,"line_end":26,"column_start":68,"column_end":77},"alias_span":null,"name":"ReadEntry","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5042,"byte_end":5057,"line_start":26,"line_end":26,"column_start":79,"column_end":94},"alias_span":null,"name":"ReadEntryResult","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":536},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5112,"byte_end":5119,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"alias_span":null,"name":"Entries","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5121,"byte_end":5131,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"alias_span":null,"name":"SaveResult","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5133,"byte_end":5143,"line_start":30,"line_end":30,"column_start":43,"column_end":53},"alias_span":null,"name":"SavedField","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":44,"index":95},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":52677,"byte_end":52686,"line_start":9,"line_end":9,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":35,"index":27},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":52707,"byte_end":52714,"line_start":11,"line_end":11,"column_start":19,"column_end":26},"alias_span":null,"name":"TempDir","value":"","parent":{"krate":0,"index":195}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":344,"byte_end":3987,"line_start":7,"line_end":128,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":406}],"decl_id":null,"docs":" Client- and server-side abstractions for HTTP `multipart/form-data` requests.","sig":null,"attributes":[{"value":"! Client- and server-side abstractions for HTTP `multipart/form-data` requests.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":344,"byte_end":425,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":426,"byte_end":429,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ### Features:","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":430,"byte_end":447,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"! This documentation is built with all features enabled.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":448,"byte_end":506,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":507,"byte_end":510,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! * `client`: The client-side abstractions for generating multipart requests.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":511,"byte_end":590,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":591,"byte_end":594,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * `server`: The server-side abstractions for parsing multipart requests.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":595,"byte_end":671,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":672,"byte_end":675,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * `mock`: Provides mock implementations of core `client` and `server` traits for debugging","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":676,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"! or non-standard use.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":771,"byte_end":795,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":796,"byte_end":799,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! * `hyper`: Integration with the [Hyper](https://crates.io/crates/hyper) HTTP library","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":800,"byte_end":888,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"! for client and/or server depending on which other feature flags are set.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":889,"byte_end":965,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":966,"byte_end":969,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! * `iron`: Integration with the [Iron](http://crates.io/crates/iron) web application","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":970,"byte_end":1057,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"! framework. See the [`server::iron`](server/iron/index.html) module for more information.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1058,"byte_end":1150,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! * `nickel` (returning in 0.14!): Integration with the [Nickel](https://crates.io/crates/nickel)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1155,"byte_end":1254,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"! web application framework. See the [`server::nickel`](server/nickel/index.html) module for more","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1255,"byte_end":1354,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"! information.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1355,"byte_end":1371,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1372,"byte_end":1375,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! * `tiny_http`: Integration with the [`tiny_http`](https://crates.io/crates/tiny_http)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1376,"byte_end":1465,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"! crate. See the [`server::tiny_http`](server/tiny_http/index.html) module for more information.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1466,"byte_end":1564,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1565,"byte_end":1568,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ### Note: Work in Progress","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1569,"byte_end":1599,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"! I have left a number of Request-for-Comments (RFC) questions on various APIs and other places","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1600,"byte_end":1697,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! in the code as there are some cases where I'm not sure what the desirable behavior is.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1698,"byte_end":1788,"line_start":34,"line_end":34,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! I have opened an issue as a place to collect responses and discussions for these questions","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1793,"byte_end":1887,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"! [on Github](https://github.com/abonander/multipart/issues/96). Please quote the RFC-statement","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1888,"byte_end":1985,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"! (and/or link to its source line) and provide your feedback there.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":1986,"byte_end":2055,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":2243,"byte_end":2265,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":63},{"krate":0,"index":195},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":402}],"decl_id":null,"docs":" The server-side abstraction for multipart requests. Enabled with the `server` feature.","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":3661,"byte_end":3687,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"! The server-side abstraction for multipart requests. Enabled with the `server` feature.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4461,"byte_end":4551,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4552,"byte_end":4555,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Use this when you are implementing an HTTP server and want to","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4556,"byte_end":4621,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"! to accept, parse, and serve HTTP `multipart/form-data` requests (file uploads).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4622,"byte_end":4705,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4706,"byte_end":4709,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! See the `Multipart` struct for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":4710,"byte_end":4755,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14594,"byte_end":14608,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"BoundaryReader","qualname":"::server::boundary::BoundaryReader","value":"BoundaryReader {  }","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" A struct implementing `Read` and `BufRead` that will yield bytes until it sees a given sequence.\n","sig":null,"attributes":[{"value":"/ A struct implementing `Read` and `BufRead` that will yield bytes until it sees a given sequence.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14465,"byte_end":14565,"line_start":33,"line_end":33,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14794,"byte_end":14805,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<BoundaryReader<R>>::from_reader","value":"pub fn from_reader<B: Into<Vec<u8>>>(R, B) -> BoundaryReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Internal API\n","sig":null,"attributes":[{"value":"/ Internal API","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14766,"byte_end":14782,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":17012,"byte_end":17028,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"set_min_buf_size","qualname":"<BoundaryReader<R>>::set_min_buf_size","value":"pub fn set_min_buf_size(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":17302,"byte_end":17318,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"consume_boundary","qualname":"<BoundaryReader<R>>::consume_boundary","value":"pub fn consume_boundary(&mut Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35185,"byte_end":35197,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"FieldHeaders","qualname":"::server::field::FieldHeaders","value":"FieldHeaders { name, filename, content_type }","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" The headers that (may) appear before a `multipart/form-data` field.","sig":null,"attributes":[{"value":"/ The headers that (may) appear before a `multipart/form-data` field.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":34855,"byte_end":34926,"line_start":103,"line_end":103,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":34927,"byte_end":34930,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ### Warning: Values are Client-Provided","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":34931,"byte_end":34974,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ Everything in this struct are values from the client and should be considered **untrustworthy**.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":34975,"byte_end":35075,"line_start":106,"line_end":106,"column_start":1,"column_end":101}},{"value":"/ This crate makes no effort to validate or sanitize any client inputs.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35076,"byte_end":35149,"line_start":107,"line_end":107,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":444},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35248,"byte_end":35252,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"name","qualname":"::server::field::FieldHeaders::name","value":"std::sync::Arc<str>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" The field's name from the form.\n","sig":null,"attributes":[{"value":"/ The field's name from the form.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35204,"byte_end":35239,"line_start":110,"line_end":110,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":445},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35437,"byte_end":35445,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"filename","qualname":"::server::field::FieldHeaders::filename","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" The filename of this entry, if supplied. This is not guaranteed to match the original file\n or even to be a valid filename for the current platform.\n","sig":null,"attributes":[{"value":"/ The filename of this entry, if supplied. This is not guaranteed to match the original file","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35269,"byte_end":35363,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ or even to be a valid filename for the current platform.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35368,"byte_end":35428,"line_start":114,"line_end":114,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35908,"byte_end":35920,"line_start":123,"line_end":123,"column_start":9,"column_end":21},"name":"content_type","qualname":"::server::field::FieldHeaders::content_type","value":"std::option::Option<mime::Mime>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" The MIME type (`Content-Type` value) of this file, if supplied by the client.","sig":null,"attributes":[{"value":"/ The MIME type (`Content-Type` value) of this file, if supplied by the client.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35468,"byte_end":35549,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35554,"byte_end":35557,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If this is not supplied, the content-type of the field should default to `text/plain` as","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35562,"byte_end":35654,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ per [IETF RFC 7578, section 4.4](https://tools.ietf.org/html/rfc7578#section-4.4), but this","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35659,"byte_end":35754,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ should not be implicitly trusted. This crate makes no attempt to identify or validate","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35759,"byte_end":35848,"line_start":121,"line_end":121,"column_start":5,"column_end":94}},{"value":"/ the content-type of the actual field data.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35853,"byte_end":35899,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39073,"byte_end":39087,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"MultipartField","qualname":"::server::field::MultipartField","value":"MultipartField { headers, data }","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" A field in a multipart request with its associated headers and data.\n","sig":null,"attributes":[{"value":"/ A field in a multipart request with its associated headers and data.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":38972,"byte_end":39044,"line_start":203,"line_end":203,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39448,"byte_end":39455,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"name":"headers","qualname":"::server::field::MultipartField::headers","value":"server::field::FieldHeaders","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" The headers for this field, including the name, filename, and content-type, if provided.","sig":null,"attributes":[{"value":"/ The headers for this field, including the name, filename, and content-type, if provided.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39108,"byte_end":39200,"line_start":206,"line_end":206,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39205,"byte_end":39208,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Values are Client-Provided","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39213,"byte_end":39256,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/ Everything in this struct are values from the client and should be considered **untrustworthy**.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39261,"byte_end":39361,"line_start":209,"line_end":209,"column_start":5,"column_end":105}},{"value":"/ This crate makes no effort to validate or sanitize any client inputs.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39366,"byte_end":39439,"line_start":210,"line_end":210,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":454},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39506,"byte_end":39510,"line_start":214,"line_end":214,"column_start":9,"column_end":13},"name":"data","qualname":"::server::field::MultipartField::data","value":"server::field::MultipartData<M>","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" The field's data.\n","sig":null,"attributes":[{"value":"/ The field's data.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39476,"byte_end":39497,"line_start":213,"line_end":213,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40150,"byte_end":40157,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"is_text","qualname":"<MultipartField<M>>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this field has no content-type or the content-type is `text/...`.","sig":null,"attributes":[{"value":"/ Returns `true` if this field has no content-type or the content-type is `text/...`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39576,"byte_end":39663,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39668,"byte_end":39671,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This typically means it can be read to a string, but it could still be using an unsupported","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39676,"byte_end":39771,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ character encoding, so decoding to `String` needs to ensure that the data is valid UTF-8.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39776,"byte_end":39869,"line_start":221,"line_end":221,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39874,"byte_end":39877,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note also that the field contents may be too large to reasonably fit in memory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39882,"byte_end":39965,"line_start":223,"line_end":223,"column_start":5,"column_end":88}},{"value":"/ The `.save()` adapter can be used to enforce a size limit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39970,"byte_end":40032,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40037,"byte_end":40040,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Detecting character encodings by any means is (currently) beyond the scope of this crate.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40045,"byte_end":40138,"line_start":226,"line_end":226,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40322,"byte_end":40332,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<MultipartField<M>>::next_entry","value":"pub fn next_entry(Self) -> ReadEntryResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry in the request.\n","sig":null,"attributes":[{"value":"/ Read the next entry in the request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40271,"byte_end":40310,"line_start":231,"line_end":231,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40629,"byte_end":40647,"line_start":240,"line_end":240,"column_start":12,"column_end":30},"name":"next_entry_inplace","qualname":"<MultipartField<M>>::next_entry_inplace","value":"pub fn next_entry_inplace(&mut Self) -> io::Result<Option<&mut Self>> where\nfor<'a> &'a mut M: ReadEntry","parent":null,"children":[],"decl_id":null,"docs":" Update `self` as the next entry.","sig":null,"attributes":[{"value":"/ Update `self` as the next entry.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40418,"byte_end":40454,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40459,"byte_end":40462,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Some(self))` if another entry was read, `Ok(None)` if the end of the body was","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40467,"byte_end":40560,"line_start":238,"line_end":238,"column_start":5,"column_end":98}},{"value":"/ reached, and `Err(e)` for any errors that occur.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":40565,"byte_end":40617,"line_start":239,"line_end":239,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41366,"byte_end":41379,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"MultipartData","qualname":"::server::field::MultipartData","value":"MultipartData {  }","parent":null,"children":[{"krate":0,"index":460}],"decl_id":null,"docs":" The data of a field in a `multipart/form-data` request.","sig":null,"attributes":[{"value":"/ The data of a field in a `multipart/form-data` request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41191,"byte_end":41250,"line_start":260,"line_end":260,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41251,"byte_end":41254,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ You can read it to EOF, or use the `save()` adaptor to save it to disk/memory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41255,"byte_end":41337,"line_start":262,"line_end":262,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41964,"byte_end":41968,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"save","qualname":"<MultipartData<M>>::save","value":"pub fn save(&mut Self) -> SaveBuilder<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a builder type which can save the field with or without a size limit.\n","sig":null,"attributes":[{"value":"/ Get a builder type which can save the field with or without a size limit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41875,"byte_end":41952,"line_start":275,"line_end":275,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42112,"byte_end":42122,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultipartData<M>>::into_inner","value":"pub fn into_inner(Self) -> M","parent":null,"children":[],"decl_id":null,"docs":" Take the inner `Multipart` or `&mut Multipart`\n","sig":null,"attributes":[{"value":"/ Take the inner `Multipart` or `&mut Multipart`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42050,"byte_end":42100,"line_start":280,"line_end":280,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42528,"byte_end":42544,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"name":"set_min_buf_size","qualname":"<MultipartData<M>>::set_min_buf_size","value":"pub fn set_min_buf_size(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum buffer size that `BufRead::fill_buf(self)` will return\n until the end of the stream is reached. Set this as small as you can tolerate\n to minimize `read()` calls (`read()` won't be called again until the buffer\n is smaller than this).","sig":null,"attributes":[{"value":"/ Set the minimum buffer size that `BufRead::fill_buf(self)` will return","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42189,"byte_end":42263,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ until the end of the stream is reached. Set this as small as you can tolerate","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42268,"byte_end":42349,"line_start":286,"line_end":286,"column_start":5,"column_end":86}},{"value":"/ to minimize `read()` calls (`read()` won't be called again until the buffer","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42354,"byte_end":42433,"line_start":287,"line_end":287,"column_start":5,"column_end":84}},{"value":"/ is smaller than this).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42438,"byte_end":42464,"line_start":288,"line_end":288,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42469,"byte_end":42472,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This value is reset between fields.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42477,"byte_end":42516,"line_start":290,"line_end":290,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44643,"byte_end":44652,"line_start":354,"line_end":354,"column_start":11,"column_end":20},"name":"ReadEntry","qualname":"::server::field::ReadEntry","value":"ReadEntry: PrivReadEntry + Sized","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":" Common trait for `Multipart` and `&mut Multipart`\n","sig":null,"attributes":[{"value":"/ Common trait for `Multipart` and `&mut Multipart`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44579,"byte_end":44632,"line_start":353,"line_end":353,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44749,"byte_end":44759,"line_start":356,"line_end":356,"column_start":8,"column_end":18},"name":"read_entry","qualname":"::server::field::ReadEntry::read_entry","value":"pub fn read_entry(Self) -> ReadEntryResult<Self>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Attempt to read the next entry in the multipart stream.\n","sig":null,"attributes":[{"value":"/ Attempt to read the next entry in the multipart stream.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44682,"byte_end":44741,"line_start":355,"line_end":355,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":45999,"byte_end":46013,"line_start":390,"line_end":390,"column_start":8,"column_end":22},"name":"read_entry_mut","qualname":"::server::field::ReadEntry::read_entry_mut","value":"pub fn read_entry_mut(&mut Self) -> ReadEntryResult<&mut Self>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Equivalent to `read_entry()` but takes `&mut self`\n","sig":null,"attributes":[{"value":"/ Equivalent to `read_entry()` but takes `&mut self`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":45937,"byte_end":45991,"line_start":389,"line_end":389,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46201,"byte_end":46214,"line_start":398,"line_end":398,"column_start":11,"column_end":24},"name":"PrivReadEntry","qualname":"::server::field::PrivReadEntry","value":"PrivReadEntry","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" Public trait but not re-exported.\n","sig":null,"attributes":[{"value":"/ Public trait but not re-exported.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46153,"byte_end":46190,"line_start":397,"line_end":397,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46226,"byte_end":46232,"line_start":399,"line_end":399,"column_start":10,"column_end":16},"name":"Source","qualname":"::server::field::PrivReadEntry::Source","value":"type Source: BufRead;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46251,"byte_end":46261,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"source_mut","qualname":"::server::field::PrivReadEntry::source_mut","value":"pub fn source_mut(&mut Self) -> &mut Self::Source","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46303,"byte_end":46319,"line_start":403,"line_end":403,"column_start":8,"column_end":24},"name":"set_min_buf_size","qualname":"::server::field::PrivReadEntry::set_min_buf_size","value":"pub fn set_min_buf_size(&mut Self, usize)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46464,"byte_end":46480,"line_start":407,"line_end":407,"column_start":8,"column_end":24},"name":"consume_boundary","qualname":"::server::field::PrivReadEntry::consume_boundary","value":"pub fn consume_boundary(&mut Self) -> io::Result<bool>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Consume the next boundary.\n Returns `true` if a field should follow, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume the next boundary.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46358,"byte_end":46388,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/ Returns `true` if a field should follow, `false` otherwise.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46393,"byte_end":46456,"line_start":406,"line_end":406,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46521,"byte_end":46533,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"read_headers","qualname":"::server::field::PrivReadEntry::read_headers","value":"pub fn read_headers(&mut Self) -> Result<FieldHeaders, io::Error>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46719,"byte_end":46733,"line_start":414,"line_end":414,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::server::field::PrivReadEntry::read_to_string","value":"pub fn read_to_string(&mut Self) -> io::Result<String>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47568,"byte_end":47573,"line_start":444,"line_end":444,"column_start":5,"column_end":10},"name":"Entry","qualname":"::server::field::ReadEntryResult::Entry","value":"ReadEntryResult::Entry(Entry)","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" The next entry was found.\n","sig":null,"attributes":[{"value":"/ The next entry was found.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47534,"byte_end":47563,"line_start":443,"line_end":443,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47626,"byte_end":47629,"line_start":446,"line_end":446,"column_start":5,"column_end":8},"name":"End","qualname":"::server::field::ReadEntryResult::End","value":"ReadEntryResult::End(M)","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" No  more entries could be read.\n","sig":null,"attributes":[{"value":"/ No  more entries could be read.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47586,"byte_end":47621,"line_start":445,"line_end":445,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47665,"byte_end":47670,"line_start":448,"line_end":448,"column_start":5,"column_end":10},"name":"Error","qualname":"::server::field::ReadEntryResult::Error","value":"ReadEntryResult::Error(M, io::Error)","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" An error occurred.\n","sig":null,"attributes":[{"value":"/ An error occurred.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47638,"byte_end":47660,"line_start":447,"line_end":447,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":172},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47471,"byte_end":47486,"line_start":442,"line_end":442,"column_start":10,"column_end":25},"name":"ReadEntryResult","qualname":"::server::field::ReadEntryResult","value":"pub enum ReadEntryResult<M: ReadEntry, Entry = MultipartField<M>> {\n\n    /// The next entry was found.\n    Entry(Entry),\n\n    /// No  more entries could be read.\n    End(M),\n\n    /// An error occurred.\n    Error(M, io::Error),\n}","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181}],"decl_id":null,"docs":" Ternary result type returned by `ReadEntry::next_entry()`,\n `Multipart::into_entry()` and `MultipartField::next_entry()`.\n","sig":null,"attributes":[{"value":"/ Ternary result type returned by `ReadEntry::next_entry()`,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47333,"byte_end":47395,"line_start":440,"line_end":440,"column_start":1,"column_end":63}},{"value":"/ `Multipart::into_entry()` and `MultipartField::next_entry()`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47396,"byte_end":47461,"line_start":441,"line_end":441,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47939,"byte_end":47950,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ReadEntryResult<M, Entry>>::into_result","value":"pub fn into_result(Self) -> io::Result<Option<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` into `Result<Option<Entry>>` as follows:","sig":null,"attributes":[{"value":"/ Convert `self` into `Result<Option<Entry>>` as follows:","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47747,"byte_end":47806,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47811,"byte_end":47814,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ * `Entry(entry) -> Ok(Some(entry))`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47819,"byte_end":47858,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ * `End(_) -> Ok(None)`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47863,"byte_end":47889,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/ * `Error(_, err) -> Err(err)`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47894,"byte_end":47927,"line_start":456,"line_end":456,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48278,"byte_end":48284,"line_start":466,"line_end":466,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ReadEntryResult<M, Entry>>::unwrap","value":"pub fn unwrap(Self) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48197,"byte_end":48266,"line_start":465,"line_end":465,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48633,"byte_end":48639,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"expect","qualname":"<ReadEntryResult<M, Entry>>::expect","value":"pub fn expect(Self, &str) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`\n with the given message. Adds the error's message in the `Error` case.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48475,"byte_end":48543,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/ with the given message. Adds the error's message in the `Error` case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48548,"byte_end":48621,"line_start":472,"line_end":472,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48917,"byte_end":48927,"line_start":480,"line_end":480,"column_start":12,"column_end":22},"name":"expect_alt","qualname":"<ReadEntryResult<M, Entry>>::expect_alt","value":"pub fn expect_alt(Self, &str, &str) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.\n If this is `End`, panics with `end_msg`; if `Error`, panics with `err_msg`\n as well as the error's message.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48713,"byte_end":48782,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/ If this is `End`, panics with `end_msg`; if `Error`, panics with `err_msg`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48787,"byte_end":48865,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/ as well as the error's message.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":48870,"byte_end":48905,"line_start":479,"line_end":479,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":49244,"byte_end":49254,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"unwrap_opt","qualname":"<ReadEntryResult<M, Entry>>::unwrap_opt","value":"pub fn unwrap_opt(Self) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":49160,"byte_end":49232,"line_start":488,"line_end":488,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":49520,"byte_end":49530,"line_start":495,"line_end":495,"column_start":12,"column_end":22},"name":"expect_opt","qualname":"<ReadEntryResult<M, Entry>>::expect_opt","value":"pub fn expect_opt(Self, &str) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case\n with the given message as well as the error's message.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":49374,"byte_end":49445,"line_start":493,"line_end":493,"column_start":5,"column_end":76}},{"value":"/ with the given message as well as the error's message.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":49450,"byte_end":49508,"line_start":494,"line_end":494,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":195},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"save","qualname":"::server::save","value":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":687},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":499},{"krate":0,"index":515},{"krate":0,"index":514},{"krate":0,"index":512},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":231},{"krate":0,"index":239},{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":534},{"krate":0,"index":283},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":314},{"krate":0,"index":542},{"krate":0,"index":549},{"krate":0,"index":324},{"krate":0,"index":335},{"krate":0,"index":551},{"krate":0,"index":562},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":578},{"krate":0,"index":591},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":375}],"decl_id":null,"docs":" Utilities for saving request entries to the filesystem.\n","sig":null,"attributes":[{"value":"! Utilities for saving request entries to the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":52589,"byte_end":52648,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57677,"byte_end":57688,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"SaveBuilder","qualname":"::server::save::SaveBuilder","value":"SaveBuilder {  }","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" A builder for saving a file or files to the local filesystem.","sig":null,"attributes":[{"value":"/ A builder for saving a file or files to the local filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54041,"byte_end":54106,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54107,"byte_end":54110,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ### `OpenOptions`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54111,"byte_end":54132,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/ This builder holds an instance of `std::fs::OpenOptions` which is used","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54133,"byte_end":54207,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ when creating the new file(s).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54208,"byte_end":54242,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54243,"byte_end":54246,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ By default, the open options are set with `.write(true).create_new(true)`,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54247,"byte_end":54325,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ so if the file already exists then an error will be thrown. This is to avoid accidentally","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54326,"byte_end":54419,"line_start":78,"line_end":78,"column_start":1,"column_end":94}},{"value":"/ overwriting files from other requests.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54420,"byte_end":54462,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54463,"byte_end":54466,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ If you want to modify the options used to open the save file, you can use","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54467,"byte_end":54544,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ `mod_open_opts()`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54545,"byte_end":54567,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54568,"byte_end":54571,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ### File Size and Count Limits","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54572,"byte_end":54606,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ You can set a size limit for individual fields with `size_limit()`, which takes either `u64`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54607,"byte_end":54703,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ or `Option<u64>`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54704,"byte_end":54725,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54726,"byte_end":54729,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ You can also set the maximum number of fields to process with `count_limit()`, which","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54730,"byte_end":54818,"line_start":88,"line_end":88,"column_start":1,"column_end":89}},{"value":"/ takes either `u32` or `Option<u32>`. This only has an effect when using","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54819,"byte_end":54894,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ `SaveBuilder<[&mut] Multipart>`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54895,"byte_end":54931,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54932,"byte_end":54935,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ By default, these limits are set conservatively to limit the maximum memory and disk space","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":54936,"byte_end":55030,"line_start":92,"line_end":92,"column_start":1,"column_end":95}},{"value":"/ usage of a single request. You should set `count_limit` specifically for each request endpoint","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55031,"byte_end":55129,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/ based on the number of fields you're expecting (exactly to that number if you're not expecting","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55130,"byte_end":55228,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/ duplicate fields).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55229,"byte_end":55251,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55252,"byte_end":55255,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ### Memory Threshold and Text Policy","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55256,"byte_end":55296,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/ By default, small fields (a few kilobytes or smaller) will be read directly to memory","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55297,"byte_end":55386,"line_start":98,"line_end":98,"column_start":1,"column_end":90}},{"value":"/ without creating a file. This behavior is controlled by the `memory_threshold()` setter. You can","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55387,"byte_end":55487,"line_start":99,"line_end":99,"column_start":1,"column_end":101}},{"value":"/ *roughly* tune the maximum memory a single request uses by tuning","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55488,"byte_end":55557,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/ `count_limit * memory_threshold`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55558,"byte_end":55594,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55595,"byte_end":55598,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If a field appears to contain text data (its content-type is `text/*` or it doesn't declare","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55599,"byte_end":55694,"line_start":103,"line_end":103,"column_start":1,"column_end":96}},{"value":"/ one), `SaveBuilder` can read it to a string instead of saving the raw bytes as long as it falls","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55695,"byte_end":55794,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/ below the set `memory_threshold`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55795,"byte_end":55832,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55833,"byte_end":55836,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ By default, the behavior is to attempt to validate the data as UTF-8, falling back to saving","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55837,"byte_end":55933,"line_start":107,"line_end":107,"column_start":1,"column_end":97}},{"value":"/ just the bytes if the validation fails at any point. You can restore/ensure this behavior","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":55934,"byte_end":56027,"line_start":108,"line_end":108,"column_start":1,"column_end":94}},{"value":"/ with the `try_text()` modifier.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56028,"byte_end":56063,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56064,"byte_end":56067,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can use the `force_text()` modifier to make the save operation return","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56068,"byte_end":56160,"line_start":111,"line_end":111,"column_start":1,"column_end":93}},{"value":"/ an error when UTF-8 decoding fails, though this only holds true while the size is below","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56161,"byte_end":56252,"line_start":112,"line_end":112,"column_start":1,"column_end":92}},{"value":"/ `memory_threshold`. The `ignore_text()` modifier turns off UTF-8 validation altogether.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56253,"byte_end":56344,"line_start":113,"line_end":113,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56345,"byte_end":56348,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ UTF-8 validation is performed incrementally (after every `BufRead::fill_buf()` call)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56349,"byte_end":56437,"line_start":115,"line_end":115,"column_start":1,"column_end":89}},{"value":"/ to hopefully maximize throughput, instead of blocking while the field is read to completion","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56438,"byte_end":56533,"line_start":116,"line_end":116,"column_start":1,"column_end":96}},{"value":"/ and performing validation over the entire result at the end. (RFC: this could be a lot of","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56534,"byte_end":56627,"line_start":117,"line_end":117,"column_start":1,"column_end":94}},{"value":"/ unnecessary work if most fields end up being written to the filesystem, however, but this","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56628,"byte_end":56721,"line_start":118,"line_end":118,"column_start":1,"column_end":94}},{"value":"/ can be turned off with `ignore_text()` if it fits the use-case.)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56722,"byte_end":56790,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56791,"byte_end":56794,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ### Warning: Do **not** trust user input!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56795,"byte_end":56840,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ It is a serious security risk to create files or directories with paths based on user input.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56841,"byte_end":56937,"line_start":122,"line_end":122,"column_start":1,"column_end":97}},{"value":"/ A malicious user could craft a path which can be used to overwrite important files, such as","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":56938,"byte_end":57033,"line_start":123,"line_end":123,"column_start":1,"column_end":96}},{"value":"/ web templates, static assets, Javascript files, database files, configuration files, etc.,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57034,"byte_end":57128,"line_start":124,"line_end":124,"column_start":1,"column_end":95}},{"value":"/ if they are writable by the server process.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57129,"byte_end":57176,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57177,"byte_end":57180,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This can be mitigated somewhat by setting filesystem permissions as","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57181,"byte_end":57252,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/ conservatively as possible and running the server under its own user with restricted","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57253,"byte_end":57341,"line_start":128,"line_end":128,"column_start":1,"column_end":89}},{"value":"/ permissions, but you should still not use user input directly as filesystem paths.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57342,"byte_end":57428,"line_start":129,"line_end":129,"column_start":1,"column_end":87}},{"value":"/ If it is truly necessary, you should sanitize user input such that it cannot cause a path to be","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57429,"byte_end":57528,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/ misinterpreted by the OS. Such functionality is outside the scope of this crate.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57529,"byte_end":57613,"line_start":131,"line_end":131,"column_start":1,"column_end":85}},{"value":"must_use = \"nothing saved to the filesystem yet\"","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57614,"byte_end":57665,"line_start":132,"line_end":132,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":58033,"byte_end":58036,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<SaveBuilder<S>>::new","value":"pub fn new(S) -> SaveBuilder<S>","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail but not problematic to have accessible.\n","sig":null,"attributes":[{"value":"/ Implementation detail but not problematic to have accessible.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57937,"byte_end":58002,"line_start":144,"line_end":144,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":58884,"byte_end":58894,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<SaveBuilder<S>>::size_limit","value":"pub fn size_limit<L: Into<Option<u64>>>(Self, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of bytes to write out *per file*.","sig":null,"attributes":[{"value":"/ Set the maximum number of bytes to write out *per file*.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":58722,"byte_end":58782,"line_start":164,"line_end":164,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":58787,"byte_end":58790,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Can be `u64` or `Option<u64>`. If `None` or `u64::MAX`, clears the limit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":58795,"byte_end":58872,"line_start":166,"line_end":166,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59244,"byte_end":59257,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"mod_open_opts","qualname":"<SaveBuilder<S>>::mod_open_opts","value":"pub fn mod_open_opts<F: FnOnce(&mut OpenOptions) -> ()>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modify the `OpenOptions` used to open any files for writing.","sig":null,"attributes":[{"value":"/ Modify the `OpenOptions` used to open any files for writing.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59031,"byte_end":59095,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59100,"byte_end":59103,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The `write` flag will be reset to `true` after the closure returns. (It'd be pretty","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59108,"byte_end":59195,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ pointless otherwise, right?)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59200,"byte_end":59232,"line_start":175,"line_end":175,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59682,"byte_end":59698,"line_start":187,"line_end":187,"column_start":12,"column_end":28},"name":"memory_threshold","qualname":"<SaveBuilder<S>>::memory_threshold","value":"pub fn memory_threshold(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the threshold at which to switch from copying a field into memory to copying\n it to disk.","sig":null,"attributes":[{"value":"/ Set the threshold at which to switch from copying a field into memory to copying","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59417,"byte_end":59501,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/ it to disk.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59506,"byte_end":59521,"line_start":183,"line_end":183,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59526,"byte_end":59529,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ If `0`, forces fields to save directly to the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59534,"byte_end":59595,"line_start":185,"line_end":185,"column_start":5,"column_end":66}},{"value":"/ If `u64::MAX`, effectively forces fields to always save to memory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59600,"byte_end":59670,"line_start":186,"line_end":186,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60170,"byte_end":60178,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"try_text","qualname":"<SaveBuilder<S>>::try_text","value":"pub fn try_text(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When encountering a field that is apparently text, try to read it to a string or fall\n back to binary otherwise.","sig":null,"attributes":[{"value":"/ When encountering a field that is apparently text, try to read it to a string or fall","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59791,"byte_end":59880,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/ back to binary otherwise.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59885,"byte_end":59914,"line_start":192,"line_end":192,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59919,"byte_end":59922,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If set for an individual field (`SaveBuilder<&mut MultipartData<_>>`), will","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":59927,"byte_end":60006,"line_start":194,"line_end":194,"column_start":5,"column_end":84}},{"value":"/ always attempt to decode text regardless of the field's `Content-Type`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60011,"byte_end":60086,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60091,"byte_end":60094,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Has no effect once `memory_threshold` has been reached.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60099,"byte_end":60158,"line_start":197,"line_end":197,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60632,"byte_end":60642,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"force_text","qualname":"<SaveBuilder<S>>::force_text","value":"pub fn force_text(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When encountering a field that is apparently text, read it to a string or return an error.","sig":null,"attributes":[{"value":"/ When encountering a field that is apparently text, read it to a string or return an error.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60260,"byte_end":60354,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60359,"byte_end":60362,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If set for an individual field (`SaveBuilder<&mut MultipartData<_>>`), will","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60367,"byte_end":60446,"line_start":204,"line_end":204,"column_start":5,"column_end":84}},{"value":"/ always attempt to decode text regardless of the field's `Content-Type`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60451,"byte_end":60526,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60531,"byte_end":60534,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ (RFC: should this continue to validate UTF-8 when writing to the filesystem?)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60539,"byte_end":60620,"line_start":207,"line_end":207,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60795,"byte_end":60806,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"ignore_text","qualname":"<SaveBuilder<S>>::ignore_text","value":"pub fn ignore_text(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't try to read or validate any field data as UTF-8.\n","sig":null,"attributes":[{"value":"/ Don't try to read or validate any field data as UTF-8.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60725,"byte_end":60783,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61130,"byte_end":61141,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"count_limit","qualname":"<SaveBuilder<M>>::count_limit","value":"pub fn count_limit<L: Into<Option<u32>>>(Self, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of fields to process.","sig":null,"attributes":[{"value":"/ Set the maximum number of fields to process.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60980,"byte_end":61028,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61033,"byte_end":61036,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Can be `u32` or `Option<u32>`. If `None` or `u32::MAX`, clears the limit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61041,"byte_end":61118,"line_start":222,"line_end":222,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61700,"byte_end":61704,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"temp","qualname":"<SaveBuilder<M>>::temp","value":"pub fn temp(Self) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using a new temporary directory prefixed with\n `multipart-rs` in the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save all fields in the request using a new temporary directory prefixed with","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61291,"byte_end":61371,"line_start":228,"line_end":228,"column_start":5,"column_end":85}},{"value":"/ `multipart-rs` in the OS temporary directory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61376,"byte_end":61425,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61430,"byte_end":61433,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ For more options, create a `TempDir` yourself and pass it to `with_temp_dir()` instead.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61438,"byte_end":61529,"line_start":231,"line_end":231,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61534,"byte_end":61537,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61542,"byte_end":61581,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61586,"byte_end":61589,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ### Note: Temporary","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61594,"byte_end":61617,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"/ See `SaveDir` for more info (the type of `Entries::save_dir`).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61622,"byte_end":61688,"line_start":236,"line_end":236,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62208,"byte_end":62224,"line_start":250,"line_end":250,"column_start":12,"column_end":28},"name":"temp_with_prefix","qualname":"<SaveBuilder<M>>::temp_with_prefix","value":"pub fn temp_with_prefix(Self, &str) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using a new temporary directory with the given string\n as a prefix in the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save all fields in the request using a new temporary directory with the given string","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61794,"byte_end":61882,"line_start":241,"line_end":241,"column_start":5,"column_end":93}},{"value":"/ as a prefix in the OS temporary directory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61887,"byte_end":61933,"line_start":242,"line_end":242,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61938,"byte_end":61941,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ For more options, create a `TempDir` yourself and pass it to `with_temp_dir()` instead.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":61946,"byte_end":62037,"line_start":244,"line_end":244,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62042,"byte_end":62045,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62050,"byte_end":62089,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62094,"byte_end":62097,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ### Note: Temporary","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62102,"byte_end":62125,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/ See `SaveDir` for more info (the type of `Entries::save_dir`).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62130,"byte_end":62196,"line_start":249,"line_end":249,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62666,"byte_end":62679,"line_start":262,"line_end":262,"column_start":12,"column_end":25},"name":"with_temp_dir","qualname":"<SaveBuilder<M>>::with_temp_dir","value":"pub fn with_temp_dir(Self, TempDir) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using the given `TempDir`.","sig":null,"attributes":[{"value":"/ Save all fields in the request using the given `TempDir`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62458,"byte_end":62519,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62524,"byte_end":62527,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62532,"byte_end":62571,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62576,"byte_end":62579,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The `TempDir` is returned in the result under `Entries::save_dir`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62584,"byte_end":62654,"line_start":261,"line_end":261,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63031,"byte_end":63039,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<SaveBuilder<M>>::with_dir","value":"pub fn with_dir<P: Into<PathBuf>>(Self, P) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save the file fields in the request to a new permanent directory with the given path.","sig":null,"attributes":[{"value":"/ Save the file fields in the request to a new permanent directory with the given path.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62805,"byte_end":62894,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62899,"byte_end":62902,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Any nonexistent directories in the path will be created.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62907,"byte_end":62967,"line_start":268,"line_end":268,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62972,"byte_end":62975,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":62980,"byte_end":63019,"line_start":270,"line_end":270,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63772,"byte_end":63784,"line_start":288,"line_end":288,"column_start":12,"column_end":24},"name":"with_entries","qualname":"<SaveBuilder<M>>::with_entries","value":"pub fn with_entries(Self, Entries) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Commence the save operation using the existing `Entries` instance.","sig":null,"attributes":[{"value":"/ Commence the save operation using the existing `Entries` instance.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63243,"byte_end":63313,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63318,"byte_end":63321,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ May be used to resume a saving operation after handling an error.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63326,"byte_end":63395,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63400,"byte_end":63403,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If `count_limit` is set, only reads that many fields before returning an error.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63408,"byte_end":63491,"line_start":283,"line_end":283,"column_start":5,"column_end":88}},{"value":"/ If you wish to resume from `PartialReason::CountLimit`, simply remove some entries.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63496,"byte_end":63583,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63588,"byte_end":63591,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that `PartialReason::CountLimit` will still be returned if the number of fields","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63596,"byte_end":63684,"line_start":286,"line_end":286,"column_start":5,"column_end":93}},{"value":"/ reaches `u32::MAX`, but this would be an extremely degenerate case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":63689,"byte_end":63760,"line_start":287,"line_end":287,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66245,"byte_end":66249,"line_start":360,"line_end":360,"column_start":12,"column_end":16},"name":"temp","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::temp","value":"pub fn temp(&mut Self) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with a random name in the\n OS temporary directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with a random name in the","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66074,"byte_end":66149,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ OS temporary directory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66154,"byte_end":66181,"line_start":357,"line_end":357,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66186,"byte_end":66189,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66194,"byte_end":66233,"line_start":359,"line_end":359,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66552,"byte_end":66565,"line_start":369,"line_end":369,"column_start":12,"column_end":25},"name":"with_filename","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_filename","value":"pub fn with_filename(&mut Self, &str) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with the given name in\n the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with the given name in","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66380,"byte_end":66452,"line_start":365,"line_end":365,"column_start":5,"column_end":77}},{"value":"/ the OS temporary directory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66457,"byte_end":66488,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66493,"byte_end":66496,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66501,"byte_end":66540,"line_start":368,"line_end":368,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66919,"byte_end":66927,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_dir","value":"pub fn with_dir<P: AsRef<Path>>(&mut Self, P) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with a random alphanumeric name\n in the given directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with a random alphanumeric name","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66742,"byte_end":66823,"line_start":376,"line_end":376,"column_start":5,"column_end":86}},{"value":"/ in the given directory.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66828,"byte_end":66855,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66860,"byte_end":66863,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":66868,"byte_end":66907,"line_start":379,"line_end":379,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67595,"byte_end":67604,"line_start":394,"line_end":394,"column_start":12,"column_end":21},"name":"with_path","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_path","value":"pub fn with_path<P: Into<PathBuf>>(&mut Self, P) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with the given path.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with the given path.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67079,"byte_end":67149,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67154,"byte_end":67157,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Creates any missing directories in the path (RFC: skip this step?).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67162,"byte_end":67233,"line_start":387,"line_end":387,"column_start":5,"column_end":76}},{"value":"/ Uses the contained `OpenOptions` to create the file.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67238,"byte_end":67294,"line_start":388,"line_end":388,"column_start":5,"column_end":61}},{"value":"/ Truncates the file to the given `size_limit`, if set.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67299,"byte_end":67356,"line_start":389,"line_end":389,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67361,"byte_end":67364,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The no directories or files will be created until the set `memory_threshold` is reached.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67369,"byte_end":67461,"line_start":391,"line_end":391,"column_start":5,"column_end":97}},{"value":"/ If `size_limit` is set and less than or equal to `memory_threshold`,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67466,"byte_end":67538,"line_start":392,"line_end":392,"column_start":5,"column_end":77}},{"value":"/ then the disk will never be touched.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":67543,"byte_end":67583,"line_start":393,"line_end":393,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":69069,"byte_end":69077,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"write_to","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::write_to","value":"pub fn write_to<W: Write>(&mut Self, W) -> SaveResult<u64, u64>","parent":null,"children":[],"decl_id":null,"docs":" Write out the field data to `dest`, truncating if a limit was set.","sig":null,"attributes":[{"value":"/ Write out the field data to `dest`, truncating if a limit was set.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":68770,"byte_end":68840,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":68845,"byte_end":68848,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes copied, and whether or not the limit was reached","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":68853,"byte_end":68933,"line_start":431,"line_end":431,"column_start":5,"column_end":85}},{"value":"/ (tested by `MultipartFile::fill_buf().is_empty()` so no bytes are consumed).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":68938,"byte_end":69018,"line_start":432,"line_end":432,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":69023,"byte_end":69026,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Retries on interrupts.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":69031,"byte_end":69057,"line_start":434,"line_end":434,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71209,"byte_end":71219,"line_start":491,"line_end":491,"column_start":12,"column_end":22},"name":"SavedField","qualname":"::server::save::SavedField","value":"SavedField { headers, data }","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" A field that has been saved (to memory or disk) from a multipart request.\n","sig":null,"attributes":[{"value":"/ A field that has been saved (to memory or disk) from a multipart request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71103,"byte_end":71180,"line_start":489,"line_end":489,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71279,"byte_end":71286,"line_start":493,"line_end":493,"column_start":9,"column_end":16},"name":"headers","qualname":"::server::save::SavedField::headers","value":"server::field::FieldHeaders","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":" The headers of the field that was saved.\n","sig":null,"attributes":[{"value":"/ The headers of the field that was saved.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71226,"byte_end":71270,"line_start":492,"line_end":492,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71379,"byte_end":71383,"line_start":495,"line_end":495,"column_start":9,"column_end":13},"name":"data","qualname":"::server::save::SavedField::data","value":"server::save::SavedData","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":" The data of the field which may reside in memory or on disk.\n","sig":null,"attributes":[{"value":"/ The data of the field which may reside in memory or on disk.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71306,"byte_end":71370,"line_start":494,"line_end":494,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":524},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71534,"byte_end":71538,"line_start":502,"line_end":502,"column_start":5,"column_end":9},"name":"Text","qualname":"::server::save::SavedData::Text","value":"SavedData::Text(String)","parent":{"krate":0,"index":523},"children":[],"decl_id":null,"docs":" Validated UTF-8 text data.\n","sig":null,"attributes":[{"value":"/ Validated UTF-8 text data.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71499,"byte_end":71529,"line_start":501,"line_end":501,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71573,"byte_end":71578,"line_start":504,"line_end":504,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::server::save::SavedData::Bytes","value":"SavedData::Bytes(Vec<u8>)","parent":{"krate":0,"index":523},"children":[],"decl_id":null,"docs":" Binary data.\n","sig":null,"attributes":[{"value":"/ Binary data.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71552,"byte_end":71568,"line_start":503,"line_end":503,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71676,"byte_end":71680,"line_start":506,"line_end":506,"column_start":5,"column_end":9},"name":"File","qualname":"::server::save::SavedData::File","value":"SavedData::File(PathBuf, u64)","parent":{"krate":0,"index":523},"children":[],"decl_id":null,"docs":" A path to a file on the filesystem and its size as written by `multipart`.\n","sig":null,"attributes":[{"value":"/ A path to a file on the filesystem and its size as written by `multipart`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71593,"byte_end":71671,"line_start":505,"line_end":505,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":523},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71483,"byte_end":71492,"line_start":500,"line_end":500,"column_start":10,"column_end":19},"name":"SavedData","qualname":"::server::save::SavedData","value":"pub enum SavedData {\n\n    /// Validated UTF-8 text data.\n    Text(String),\n\n    /// Binary data.\n    Bytes(Vec<u8>),\n\n    /// A path to a file on the filesystem and its size as written by `multipart`.\n    File(PathBuf, u64),\n}","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530}],"decl_id":null,"docs":" A saved field's data container (in memory or on disk)\n","sig":null,"attributes":[{"value":"/ A saved field's data container (in memory or on disk)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71399,"byte_end":71456,"line_start":498,"line_end":498,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71869,"byte_end":71877,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"readable","qualname":"<SavedData>::readable","value":"pub fn readable(&Self) -> io::Result<DataReader>","parent":null,"children":[],"decl_id":null,"docs":" Get an adapter for this data which implements `Read`.","sig":null,"attributes":[{"value":"/ Get an adapter for this data which implements `Read`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71720,"byte_end":71777,"line_start":510,"line_end":510,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71782,"byte_end":71785,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ If the data is in a file, the file is opened in read-only mode.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71790,"byte_end":71857,"line_start":512,"line_end":512,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72392,"byte_end":72396,"line_start":527,"line_end":527,"column_start":12,"column_end":16},"name":"size","qualname":"<SavedData>::size","value":"pub fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the data, in memory or on disk.","sig":null,"attributes":[{"value":"/ Get the size of the data, in memory or on disk.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72213,"byte_end":72264,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72269,"byte_end":72272,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ #### Note","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72277,"byte_end":72290,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ The size on disk may not match the size of the file if it is externally modified.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72295,"byte_end":72380,"line_start":526,"line_end":526,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72709,"byte_end":72718,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"is_memory","qualname":"<SavedData>::is_memory","value":"pub fn is_memory(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data is known to be in memory (`Text | Bytes`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data is known to be in memory (`Text | Bytes`)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":72625,"byte_end":72697,"line_start":537,"line_end":537,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":298},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73446,"byte_end":73451,"line_start":572,"line_end":572,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::server::save::DataReader::Bytes","value":"DataReader::Bytes(&'a [u8])","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" In-memory data source (`SavedData::Bytes | Text`)\n","sig":null,"attributes":[{"value":"/ In-memory data source (`SavedData::Bytes | Text`)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73388,"byte_end":73441,"line_start":571,"line_end":571,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73515,"byte_end":73519,"line_start":574,"line_end":574,"column_start":5,"column_end":9},"name":"File","qualname":"::server::save::DataReader::File","value":"DataReader::File(BufReader<File>)","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" On-disk data source (`SavedData::File`)\n","sig":null,"attributes":[{"value":"/ On-disk data source (`SavedData::File`)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73467,"byte_end":73510,"line_start":573,"line_end":573,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":296},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73367,"byte_end":73377,"line_start":570,"line_end":570,"column_start":10,"column_end":20},"name":"DataReader","qualname":"::server::save::DataReader","value":"pub enum DataReader<'a> {\n\n    /// In-memory data source (`SavedData::Bytes | Text`)\n    Bytes(&'a [u8]),\n\n    /// On-disk data source (`SavedData::File`)\n    File(BufReader<File>),\n}","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":301}],"decl_id":null,"docs":" A `Read` (and `BufRead`) adapter for `SavedData`\n","sig":null,"attributes":[{"value":"/ A `Read` (and `BufRead`) adapter for `SavedData`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73305,"byte_end":73357,"line_start":569,"line_end":569,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74371,"byte_end":74378,"line_start":610,"line_end":610,"column_start":12,"column_end":19},"name":"Entries","qualname":"::server::save::Entries","value":"Entries { fields, save_dir }","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" A result of `Multipart::save()`.\n","sig":null,"attributes":[{"value":"/ A result of `Multipart::save()`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74306,"byte_end":74342,"line_start":608,"line_end":608,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":537},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74858,"byte_end":74864,"line_start":619,"line_end":619,"column_start":13,"column_end":19},"name":"fields","qualname":"::server::save::Entries::fields","value":"std::collections::HashMap<std::sync::Arc<str>, std::vec::Vec<server::save::SavedField>>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The fields of the multipart request, mapped by field name -> value.","sig":null,"attributes":[{"value":"/ The fields of the multipart request, mapped by field name -> value.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74385,"byte_end":74456,"line_start":611,"line_end":611,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74461,"byte_end":74464,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ A field name may have multiple actual fields associated with it, but the most","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74469,"byte_end":74550,"line_start":613,"line_end":613,"column_start":5,"column_end":86}},{"value":"/ common case is a single field.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74555,"byte_end":74589,"line_start":614,"line_end":614,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74594,"byte_end":74597,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Each vector is guaranteed not to be empty unless externally modified.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74602,"byte_end":74675,"line_start":616,"line_end":616,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74978,"byte_end":74986,"line_start":621,"line_end":621,"column_start":9,"column_end":17},"name":"save_dir","qualname":"::server::save::Entries::save_dir","value":"server::save::SaveDir","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The directory that the entries in `fields` were saved into.\n","sig":null,"attributes":[{"value":"/ The directory that the entries in `fields` were saved into.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":74906,"byte_end":74969,"line_start":620,"line_end":620,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75105,"byte_end":75108,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"new","qualname":"<Entries>::new","value":"pub fn new(SaveDir) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Entries` with the given `SaveDir`\n","sig":null,"attributes":[{"value":"/ Create a new `Entries` with the given `SaveDir`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75042,"byte_end":75093,"line_start":626,"line_end":626,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75335,"byte_end":75343,"line_start":636,"line_end":636,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Entries>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `fields` is empty, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `fields` is empty, `false` otherwise.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75264,"byte_end":75323,"line_start":635,"line_end":635,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75726,"byte_end":75738,"line_start":647,"line_end":647,"column_start":12,"column_end":24},"name":"fields_count","qualname":"<Entries>::fields_count","value":"pub fn fields_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of actual fields contained within this `Entries`.","sig":null,"attributes":[{"value":"/ The number of actual fields contained within this `Entries`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75403,"byte_end":75467,"line_start":640,"line_end":640,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75472,"byte_end":75475,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Effectively `self.fields.values().map(Vec::len).sum()` but maintained separately.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75480,"byte_end":75565,"line_start":642,"line_end":642,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75570,"byte_end":75573,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75578,"byte_end":75589,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/ This will be incorrect if `fields` is modified externally. Call `recount_fields()`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75594,"byte_end":75680,"line_start":645,"line_end":645,"column_start":5,"column_end":91}},{"value":"/ to get the correct count.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75685,"byte_end":75714,"line_start":646,"line_end":646,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75885,"byte_end":75899,"line_start":652,"line_end":652,"column_start":12,"column_end":26},"name":"recount_fields","qualname":"<Entries>::recount_fields","value":"pub fn recount_fields(&mut Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Sum the number of fields in this `Entries` and then return the updated value.\n","sig":null,"attributes":[{"value":"/ Sum the number of fields in this `Entries` and then return the updated value.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75792,"byte_end":75873,"line_start":651,"line_end":651,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":76821,"byte_end":76832,"line_start":675,"line_end":675,"column_start":12,"column_end":23},"name":"print_debug","qualname":"<Entries>::print_debug","value":"pub fn print_debug(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Print all fields and their contents to stdout. Mostly for testing purposes.\n","sig":null,"attributes":[{"value":"/ Print all fields and their contents to stdout. Mostly for testing purposes.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":76730,"byte_end":76809,"line_start":674,"line_end":674,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77086,"byte_end":77097,"line_start":682,"line_end":682,"column_start":12,"column_end":23},"name":"write_debug","qualname":"<Entries>::write_debug","value":"pub fn write_debug<W: Write>(&Self, W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write all fields and their contents to the given output. Mostly for testing purposes.\n","sig":null,"attributes":[{"value":"/ Write all fields and their contents to the given output. Mostly for testing purposes.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":76985,"byte_end":77074,"line_start":681,"line_end":681,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77887,"byte_end":77891,"line_start":703,"line_end":703,"column_start":5,"column_end":9},"name":"Temp","qualname":"::server::save::SaveDir::Temp","value":"SaveDir::Temp(TempDir)","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" This directory is temporary and will be deleted, along with its contents, when this wrapper\n is dropped.\n","sig":null,"attributes":[{"value":"/ This directory is temporary and will be deleted, along with its contents, when this wrapper","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77767,"byte_end":77862,"line_start":701,"line_end":701,"column_start":5,"column_end":100}},{"value":"/ is dropped.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77867,"byte_end":77882,"line_start":702,"line_end":702,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":546},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78133,"byte_end":78137,"line_start":708,"line_end":708,"column_start":5,"column_end":9},"name":"Perm","qualname":"::server::save::SaveDir::Perm","value":"SaveDir::Perm(PathBuf)","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" This directory is permanent and will be left on the filesystem when this wrapper is dropped.","sig":null,"attributes":[{"value":"/ This directory is permanent and will be left on the filesystem when this wrapper is dropped.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77906,"byte_end":78002,"line_start":704,"line_end":704,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78007,"byte_end":78010,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ **N.B.** If this directory is in the OS temporary directory then it may still be","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78015,"byte_end":78099,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/ deleted at any time.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78104,"byte_end":78128,"line_start":707,"line_end":707,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":542},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77753,"byte_end":77760,"line_start":700,"line_end":700,"column_start":10,"column_end":17},"name":"SaveDir","qualname":"::server::save::SaveDir","value":"pub enum SaveDir {\n\n    /// This directory is temporary and will be deleted, along with its contents, when this wrapper\n    /// is dropped.\n    Temp(TempDir),\n\n    /// This directory is permanent and will be left on the filesystem when this wrapper is dropped.\n    ///\n    /// **N.B.** If this directory is in the OS temporary directory then it may still be\n    /// deleted at any time.\n    Perm(PathBuf),\n}","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":546}],"decl_id":null,"docs":" The save directory for `Entries`. May be temporary (delete-on-drop) or permanent.\n","sig":null,"attributes":[{"value":"/ The save directory for `Entries`. May be temporary (delete-on-drop) or permanent.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":77641,"byte_end":77726,"line_start":698,"line_end":698,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78248,"byte_end":78255,"line_start":713,"line_end":713,"column_start":12,"column_end":19},"name":"as_path","qualname":"<SaveDir>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Get the path of this directory, either temporary or permanent.\n","sig":null,"attributes":[{"value":"/ Get the path of this directory, either temporary or permanent.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78170,"byte_end":78236,"line_start":712,"line_end":712,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78534,"byte_end":78546,"line_start":722,"line_end":722,"column_start":12,"column_end":24},"name":"is_temporary","qualname":"<SaveDir>::is_temporary","value":"pub fn is_temporary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a temporary directory which will be deleted on-drop.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is a temporary directory which will be deleted on-drop.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78440,"byte_end":78522,"line_start":721,"line_end":721,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78828,"byte_end":78837,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"into_path","qualname":"<SaveDir>::into_path","value":"pub fn into_path(Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the `PathBuf` from `self`; if this is a temporary directory,\n it will be converted to a permanent one.\n","sig":null,"attributes":[{"value":"/ Unwrap the `PathBuf` from `self`; if this is a temporary directory,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78696,"byte_end":78767,"line_start":730,"line_end":730,"column_start":5,"column_end":76}},{"value":"/ it will be converted to a permanent one.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78772,"byte_end":78816,"line_start":731,"line_end":731,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79588,"byte_end":79592,"line_start":751,"line_end":751,"column_start":12,"column_end":16},"name":"keep","qualname":"<SaveDir>::keep","value":"pub fn keep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" If this `SaveDir` is temporary, convert it to permanent.\n This is a no-op if it already is permanent.","sig":null,"attributes":[{"value":"/ If this `SaveDir` is temporary, convert it to permanent.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79018,"byte_end":79078,"line_start":741,"line_end":741,"column_start":5,"column_end":65}},{"value":"/ This is a no-op if it already is permanent.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79083,"byte_end":79130,"line_start":742,"line_end":742,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79135,"byte_end":79138,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Potential Data Loss","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79143,"byte_end":79179,"line_start":744,"line_end":744,"column_start":5,"column_end":41}},{"value":"/ Even though this will prevent deletion on-drop, the temporary folder on most OSes","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79184,"byte_end":79269,"line_start":745,"line_end":745,"column_start":5,"column_end":90}},{"value":"/ (where this directory is created by default) can be automatically cleared by the OS at any","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79274,"byte_end":79368,"line_start":746,"line_end":746,"column_start":5,"column_end":99}},{"value":"/ time, usually on reboot or when free space is low.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79373,"byte_end":79427,"line_start":747,"line_end":747,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79432,"byte_end":79435,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ It is recommended that you relocate the files from a request which you want to keep to a","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79440,"byte_end":79532,"line_start":749,"line_end":749,"column_start":5,"column_end":97}},{"value":"/ permanent folder on the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79537,"byte_end":79576,"line_start":750,"line_end":750,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80293,"byte_end":80299,"line_start":767,"line_end":767,"column_start":12,"column_end":18},"name":"delete","qualname":"<SaveDir>::delete","value":"pub fn delete(Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete this directory and its contents, regardless of its permanence.","sig":null,"attributes":[{"value":"/ Delete this directory and its contents, regardless of its permanence.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79813,"byte_end":79886,"line_start":759,"line_end":759,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79891,"byte_end":79894,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Potential Data Loss","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79899,"byte_end":79935,"line_start":761,"line_end":761,"column_start":5,"column_end":41}},{"value":"/ This is very likely irreversible, depending on the OS implementation.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":79940,"byte_end":80013,"line_start":762,"line_end":762,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80018,"byte_end":80021,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ Files deleted programmatically are deleted directly from disk, as compared to most file","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80026,"byte_end":80117,"line_start":764,"line_end":764,"column_start":5,"column_end":96}},{"value":"/ manager applications which use a staging area from which deleted files can be safely","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80122,"byte_end":80210,"line_start":765,"line_end":765,"column_start":5,"column_end":93}},{"value":"/ recovered (i.e. Windows' Recycle Bin, OS X's Trash Can, etc.).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80215,"byte_end":80281,"line_start":766,"line_end":766,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":552},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80830,"byte_end":80840,"line_start":788,"line_end":788,"column_start":5,"column_end":15},"name":"CountLimit","qualname":"::server::save::PartialReason::CountLimit","value":"PartialReason::CountLimit","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" The count limit for files in the request was hit.","sig":null,"attributes":[{"value":"/ The count limit for files in the request was hit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80698,"byte_end":80751,"line_start":785,"line_end":785,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80756,"byte_end":80759,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The associated file has not been saved to the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80764,"byte_end":80825,"line_start":787,"line_end":787,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80967,"byte_end":80976,"line_start":792,"line_end":792,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::server::save::PartialReason::SizeLimit","value":"PartialReason::SizeLimit","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" The size limit for an individual file was hit.","sig":null,"attributes":[{"value":"/ The size limit for an individual file was hit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80846,"byte_end":80896,"line_start":789,"line_end":789,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80901,"byte_end":80904,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The file was partially written to the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80909,"byte_end":80962,"line_start":791,"line_end":791,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81030,"byte_end":81037,"line_start":794,"line_end":794,"column_start":5,"column_end":12},"name":"IoError","qualname":"::server::save::PartialReason::IoError","value":"PartialReason::IoError(io::Error)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" An error occurred during the operation.\n","sig":null,"attributes":[{"value":"/ An error occurred during the operation.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80982,"byte_end":81025,"line_start":793,"line_end":793,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81148,"byte_end":81157,"line_start":796,"line_end":796,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::server::save::PartialReason::Utf8Error","value":"PartialReason::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" An error returned from validating a field as UTF-8 due to `SaveBuilder::force_text()`\n","sig":null,"attributes":[{"value":"/ An error returned from validating a field as UTF-8 due to `SaveBuilder::force_text()`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81054,"byte_end":81143,"line_start":795,"line_end":795,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":551},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80678,"byte_end":80691,"line_start":784,"line_end":784,"column_start":10,"column_end":23},"name":"PartialReason","qualname":"::server::save::PartialReason","value":"pub enum PartialReason {\n\n    /// The count limit for files in the request was hit.\n    ///\n    /// The associated file has not been saved to the filesystem.\n    CountLimit,\n\n    /// The size limit for an individual file was hit.\n    ///\n    /// The file was partially written to the filesystem.\n    SizeLimit,\n\n    /// An error occurred during the operation.\n    IoError(io::Error),\n\n    /// An error returned from validating a field as UTF-8 due to `SaveBuilder::force_text()`\n    Utf8Error(str::Utf8Error),\n}","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":559}],"decl_id":null,"docs":" The reason the save operation quit partway through.\n","sig":null,"attributes":[{"value":"/ The reason the save operation quit partway through.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80596,"byte_end":80651,"line_start":782,"line_end":782,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81501,"byte_end":81511,"line_start":813,"line_end":813,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<PartialReason>::unwrap_err","value":"pub fn unwrap_err(Self) -> io::Error","parent":null,"children":[],"decl_id":null,"docs":" Return `io::Error` in the `IoError` case or panic otherwise.\n","sig":null,"attributes":[{"value":"/ Return `io::Error` in the `IoError` case or panic otherwise.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81425,"byte_end":81489,"line_start":812,"line_end":812,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81712,"byte_end":81722,"line_start":819,"line_end":819,"column_start":12,"column_end":22},"name":"expect_err","qualname":"<PartialReason>::expect_err","value":"pub fn expect_err(Self, &str) -> io::Error","parent":null,"children":[],"decl_id":null,"docs":" Return `io::Error` in the `IoError` case or panic with the given\n message otherwise.\n","sig":null,"attributes":[{"value":"/ Return `io::Error` in the `IoError` case or panic with the given","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81605,"byte_end":81673,"line_start":817,"line_end":817,"column_start":5,"column_end":73}},{"value":"/ message otherwise.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81678,"byte_end":81700,"line_start":818,"line_end":818,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82049,"byte_end":82066,"line_start":831,"line_end":831,"column_start":12,"column_end":29},"name":"PartialSavedField","qualname":"::server::save::PartialSavedField","value":"PartialSavedField { source, dest }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":" The field that was being read when the save operation quit.","sig":null,"attributes":[{"value":"/ The field that was being read when the save operation quit.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81887,"byte_end":81950,"line_start":827,"line_end":827,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81951,"byte_end":81954,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ May be partially saved to the filesystem if `dest` is `Some`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81955,"byte_end":82020,"line_start":829,"line_end":829,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82189,"byte_end":82195,"line_start":835,"line_end":835,"column_start":9,"column_end":15},"name":"source","qualname":"::server::save::PartialSavedField::source","value":"server::field::MultipartField<M>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" The field that was being read.","sig":null,"attributes":[{"value":"/ The field that was being read.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82087,"byte_end":82121,"line_start":832,"line_end":832,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82126,"byte_end":82129,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ May be partially read if `dest` is `Some`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82134,"byte_end":82180,"line_start":834,"line_end":834,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82288,"byte_end":82292,"line_start":837,"line_end":837,"column_start":9,"column_end":13},"name":"dest","qualname":"::server::save::PartialSavedField::dest","value":"std::option::Option<server::save::SavedData>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" The data from the saving operation, if it got that far.\n","sig":null,"attributes":[{"value":"/ The data from the saving operation, if it got that far.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82220,"byte_end":82279,"line_start":836,"line_end":836,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82568,"byte_end":82582,"line_start":846,"line_end":846,"column_start":12,"column_end":26},"name":"PartialEntries","qualname":"::server::save::PartialEntries","value":"PartialEntries { entries, partial }","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" The partial result type for `Multipart::save*()`.","sig":null,"attributes":[{"value":"/ The partial result type for `Multipart::save*()`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82316,"byte_end":82369,"line_start":840,"line_end":840,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82370,"byte_end":82373,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ Contains the successfully saved entries as well as the partially","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82374,"byte_end":82442,"line_start":842,"line_end":842,"column_start":1,"column_end":69}},{"value":"/ saved file that was in the process of being read when the error occurred,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82443,"byte_end":82520,"line_start":843,"line_end":843,"column_start":1,"column_end":78}},{"value":"/ if applicable.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82521,"byte_end":82539,"line_start":844,"line_end":844,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":573},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82657,"byte_end":82664,"line_start":848,"line_end":848,"column_start":9,"column_end":16},"name":"entries","qualname":"::server::save::PartialEntries::entries","value":"server::save::Entries","parent":{"krate":0,"index":571},"children":[],"decl_id":null,"docs":" The entries that were saved successfully.\n","sig":null,"attributes":[{"value":"/ The entries that were saved successfully.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82603,"byte_end":82648,"line_start":847,"line_end":847,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":574},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82794,"byte_end":82801,"line_start":851,"line_end":851,"column_start":9,"column_end":16},"name":"partial","qualname":"::server::save::PartialEntries::partial","value":"std::option::Option<server::save::PartialSavedField<M>>","parent":{"krate":0,"index":571},"children":[],"decl_id":null,"docs":" The field that was in the process of being read. `None` if the error\n occurred between entries.\n","sig":null,"attributes":[{"value":"/ The field that was in the process of being read. `None` if the error","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82679,"byte_end":82751,"line_start":849,"line_end":849,"column_start":5,"column_end":77}},{"value":"/ occurred between entries.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82756,"byte_end":82785,"line_start":850,"line_end":850,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83202,"byte_end":83214,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"keep_partial","qualname":"<PartialEntries<M>>::keep_partial","value":"pub fn keep_partial(Self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" If `partial` is present and contains a `SavedFile` then just\n add it to the `Entries` instance and return it.","sig":null,"attributes":[{"value":"/ If `partial` is present and contains a `SavedFile` then just","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83020,"byte_end":83084,"line_start":862,"line_end":862,"column_start":5,"column_end":69}},{"value":"/ add it to the `Entries` instance and return it.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83089,"byte_end":83140,"line_start":863,"line_end":863,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83145,"byte_end":83148,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns `self.entries`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83153,"byte_end":83190,"line_start":865,"line_end":865,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83660,"byte_end":83664,"line_start":881,"line_end":881,"column_start":5,"column_end":9},"name":"Full","qualname":"::server::save::SaveResult::Full","value":"SaveResult::Full(Success)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The operation was a total success. Contained is the complete result.\n","sig":null,"attributes":[{"value":"/ The operation was a total success. Contained is the complete result.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83583,"byte_end":83655,"line_start":880,"line_end":880,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83785,"byte_end":83792,"line_start":884,"line_end":884,"column_start":5,"column_end":12},"name":"Partial","qualname":"::server::save::SaveResult::Partial","value":"SaveResult::Partial(Partial, PartialReason)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The operation quit partway through. Included is the partial\n result along with the reason.\n","sig":null,"attributes":[{"value":"/ The operation quit partway through. Included is the partial","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83679,"byte_end":83742,"line_start":882,"line_end":882,"column_start":5,"column_end":68}},{"value":"/ result along with the reason.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83747,"byte_end":83780,"line_start":883,"line_end":883,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83905,"byte_end":83910,"line_start":886,"line_end":886,"column_start":5,"column_end":10},"name":"Error","qualname":"::server::save::SaveResult::Error","value":"SaveResult::Error(io::Error)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" An error occurred at the start of the operation, before anything was done.\n","sig":null,"attributes":[{"value":"/ An error occurred at the start of the operation, before anything was done.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83822,"byte_end":83900,"line_start":885,"line_end":885,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":578},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83548,"byte_end":83558,"line_start":879,"line_end":879,"column_start":10,"column_end":20},"name":"SaveResult","qualname":"::server::save::SaveResult","value":"pub enum SaveResult<Success, Partial> {\n\n    /// The operation was a total success. Contained is the complete result.\n    Full(Success),\n\n    /// The operation quit partway through. Included is the partial\n    /// result along with the reason.\n    Partial(Partial, PartialReason),\n\n    /// An error occurred at the start of the operation, before anything was done.\n    Error(io::Error),\n}","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":588}],"decl_id":null,"docs":" The ternary result type used for the `SaveBuilder<_>` API.\n","sig":null,"attributes":[{"value":"/ The ternary result type used for the `SaveBuilder<_>` API.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83459,"byte_end":83521,"line_start":877,"line_end":877,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83990,"byte_end":84007,"line_start":890,"line_end":890,"column_start":10,"column_end":27},"name":"EntriesSaveResult","qualname":"::server::save::EntriesSaveResult","value":"SaveResult<Entries, PartialEntries<M>>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand result for methods that return `Entries`\n","sig":null,"attributes":[{"value":"/ Shorthand result for methods that return `Entries`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":83926,"byte_end":83980,"line_start":889,"line_end":889,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":352},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84340,"byte_end":84355,"line_start":897,"line_end":897,"column_start":10,"column_end":25},"name":"FieldSaveResult","qualname":"::server::save::FieldSaveResult","value":"SaveResult<SavedData, SavedData>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand result for methods that return `FieldData`s.","sig":null,"attributes":[{"value":"/ Shorthand result for methods that return `FieldData`s.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84054,"byte_end":84112,"line_start":892,"line_end":892,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84113,"byte_end":84116,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ The `MultipartData` is not provided here because it is not necessary to return","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84117,"byte_end":84199,"line_start":894,"line_end":894,"column_start":1,"column_end":83}},{"value":"/ a borrow when the owned version is probably in the same scope. This hopefully","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84200,"byte_end":84281,"line_start":895,"line_end":895,"column_start":1,"column_end":82}},{"value":"/ saves some headache with the borrow-checker.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84282,"byte_end":84330,"line_start":896,"line_end":896,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84543,"byte_end":84555,"line_start":902,"line_end":902,"column_start":12,"column_end":24},"name":"into_entries","qualname":"<EntriesSaveResult<M>>::into_entries","value":"pub fn into_entries(Self) -> Option<Entries>","parent":null,"children":[],"decl_id":null,"docs":" Take the `Entries` from `self`, if applicable, and discarding\n the error, if any.\n","sig":null,"attributes":[{"value":"/ Take the `Entries` from `self`, if applicable, and discarding","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84439,"byte_end":84504,"line_start":900,"line_end":900,"column_start":5,"column_end":70}},{"value":"/ the error, if any.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84509,"byte_end":84531,"line_start":901,"line_end":901,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84875,"byte_end":84880,"line_start":912,"line_end":912,"column_start":12,"column_end":17},"name":"okish","qualname":"<SaveResult<S, P>>::okish","value":"pub fn okish(Self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to `Option<S>`; there may still have been an error.\n","sig":null,"attributes":[{"value":"/ Convert `self` to `Option<S>`; there may still have been an error.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84793,"byte_end":84863,"line_start":911,"line_end":911,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85061,"byte_end":85064,"line_start":918,"line_end":918,"column_start":12,"column_end":15},"name":"map","qualname":"<SaveResult<S, P>>::map","value":"pub fn map<T, Map>(Self, Map) -> SaveResult<T, T> where Map: FnOnce(S) -> T","parent":null,"children":[],"decl_id":null,"docs":" Map the `Full` or `Partial` values to a new type, retaining the reason\n in the `Partial` case.\n","sig":null,"attributes":[{"value":"/ Map the `Full` or `Partial` values to a new type, retaining the reason","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84944,"byte_end":85018,"line_start":916,"line_end":916,"column_start":5,"column_end":79}},{"value":"/ in the `Partial` case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85023,"byte_end":85049,"line_start":917,"line_end":917,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85402,"byte_end":85415,"line_start":927,"line_end":927,"column_start":12,"column_end":25},"name":"into_opt_both","qualname":"<SaveResult<S, P>>::into_opt_both","value":"pub fn into_opt_both(Self) -> (Option<S>, Option<io::Error>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose `self` to `(Option<S>, Option<io::Error>)`\n","sig":null,"attributes":[{"value":"/ Decompose `self` to `(Option<S>, Option<io::Error>)`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85334,"byte_end":85390,"line_start":926,"line_end":926,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85828,"byte_end":85839,"line_start":937,"line_end":937,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SaveResult<S, P>>::into_result","value":"pub fn into_result(Self) -> io::Result<S>","parent":null,"children":[],"decl_id":null,"docs":" Map `self` to an `io::Result`, discarding the error in the `Partial` case.\n","sig":null,"attributes":[{"value":"/ Map `self` to an `io::Result`, discarding the error in the `Partial` case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":85738,"byte_end":85816,"line_start":936,"line_end":936,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86574,"byte_end":86592,"line_start":953,"line_end":953,"column_start":12,"column_end":30},"name":"into_result_strict","qualname":"<SaveResult<S, P>>::into_result_strict","value":"pub fn into_result_strict(Self) -> io::Result<S>","parent":null,"children":[],"decl_id":null,"docs":" Pessimistic version of `into_result()` which will return an error even\n for the `Partial` case.","sig":null,"attributes":[{"value":"/ Pessimistic version of `into_result()` which will return an error even","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86044,"byte_end":86118,"line_start":945,"line_end":945,"column_start":5,"column_end":79}},{"value":"/ for the `Partial` case.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86123,"byte_end":86150,"line_start":946,"line_end":946,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86155,"byte_end":86158,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ### Note: Possible Storage Leak","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86163,"byte_end":86198,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/ It's generally not a good idea to ignore the `Partial` case, as there may still be a","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86203,"byte_end":86291,"line_start":949,"line_end":949,"column_start":5,"column_end":93}},{"value":"/ partially written file on-disk. If you're not using a temporary directory","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86296,"byte_end":86373,"line_start":950,"line_end":950,"column_start":5,"column_end":82}},{"value":"/ (OS-managed or via `TempDir`) then partially written files will remain on-disk until","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86378,"byte_end":86466,"line_start":951,"line_end":951,"column_start":5,"column_end":93}},{"value":"/ explicitly removed which could result in excessive disk usage if not monitored closely.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":86471,"byte_end":86562,"line_start":952,"line_end":952,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6088,"byte_end":6097,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"Multipart","qualname":"::server::Multipart","value":"Multipart {  }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" The server-side implementation of `multipart/form-data` requests.","sig":null,"attributes":[{"value":"/ The server-side implementation of `multipart/form-data` requests.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5927,"byte_end":5996,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5997,"byte_end":6000,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Implements `Borrow<R>` to allow access to the request body, if desired.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6001,"byte_end":6076,"line_start":78,"line_end":78,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6357,"byte_end":6369,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"from_request","qualname":"<Multipart<()>>::from_request","value":"pub fn from_request<R: HttpRequest>(R) -> Result<Multipart<R::Body>, R>","parent":null,"children":[],"decl_id":null,"docs":" If the given `HttpRequest` is a multipart/form-data POST request,\n return the request body wrapped in the multipart reader. Otherwise,\n returns the original request.\n","sig":null,"attributes":[{"value":"/ If the given `HttpRequest` is a multipart/form-data POST request,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6162,"byte_end":6231,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ return the request body wrapped in the multipart reader. Otherwise,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6236,"byte_end":6307,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ returns the original request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6312,"byte_end":6345,"line_start":86,"line_end":86,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7310,"byte_end":7319,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"with_body","qualname":"<Multipart<R>>::with_body","value":"pub fn with_body<Bnd: Into<String>>(R, Bnd) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Multipart` with the given body reader and boundary.","sig":null,"attributes":[{"value":"/ Construct a new `Multipart` with the given body reader and boundary.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6783,"byte_end":6855,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6860,"byte_end":6863,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Note: `boundary`","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6868,"byte_end":6891,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"/ This will prepend the requisite `--` to the boundary string as documented in","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6896,"byte_end":6976,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ [IETF RFC 1341, Section 7.2.1: \"Multipart: the common syntax\"][rfc1341-7.2.1].","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6981,"byte_end":7063,"line_start":103,"line_end":103,"column_start":5,"column_end":87}},{"value":"/ Simply pass the value of the `boundary` key from the `Content-Type` header in the","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7068,"byte_end":7153,"line_start":104,"line_end":104,"column_start":5,"column_end":90}},{"value":"/ request (or use `Multipart::from_request()`, if supported).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7158,"byte_end":7221,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7226,"byte_end":7229,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [rfc1341-7.2.1]: https://tools.ietf.org/html/rfc1341#page-30","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7234,"byte_end":7298,"line_start":107,"line_end":107,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7950,"byte_end":7960,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"read_entry","qualname":"<Multipart<R>>::read_entry","value":"pub fn read_entry(&mut Self) -> io::Result<Option<MultipartField<&mut Self>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry from this multipart request, returning a struct with the field's name and\n data. See `MultipartField` for more info.","sig":null,"attributes":[{"value":"/ Read the next entry from this multipart request, returning a struct with the field's name and","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7584,"byte_end":7681,"line_start":118,"line_end":118,"column_start":5,"column_end":102}},{"value":"/ data. See `MultipartField` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7686,"byte_end":7731,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7736,"byte_end":7739,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ## Warning: Risk of Data Loss","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7744,"byte_end":7777,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ If the previously returned entry had contents of type `MultipartField::File`,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7782,"byte_end":7863,"line_start":122,"line_end":122,"column_start":5,"column_end":86}},{"value":"/ calling this again will discard any unread contents of that entry.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":7868,"byte_end":7938,"line_start":123,"line_end":123,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8237,"byte_end":8247,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_entry","qualname":"<Multipart<R>>::into_entry","value":"pub fn into_entry(Self) -> ReadEntryResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry from this multipart request, returning a struct with the field's name and\n data. See `MultipartField` for more info.\n","sig":null,"attributes":[{"value":"/ Read the next entry from this multipart request, returning a struct with the field's name and","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8078,"byte_end":8175,"line_start":128,"line_end":128,"column_start":5,"column_end":102}},{"value":"/ data. See `MultipartField` for more info.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8180,"byte_end":8225,"line_start":129,"line_end":129,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8640,"byte_end":8653,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"foreach_entry","qualname":"<Multipart<R>>::foreach_entry","value":"pub fn foreach_entry<F>(&mut Self, F) -> io::Result<()> where\nF: FnMut(MultipartField<&mut Self>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for each entry in the multipart request.\n \n This is a substitute for Rust not supporting streaming iterators (where the return value\n from `next()` borrows the iterator for a bound lifetime).","sig":null,"attributes":[{"value":"/ Call `f` for each entry in the multipart request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8318,"byte_end":8371,"line_start":134,"line_end":134,"column_start":5,"column_end":58}},{"value":"/ ","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8376,"byte_end":8380,"line_start":135,"line_end":135,"column_start":5,"column_end":9}},{"value":"/ This is a substitute for Rust not supporting streaming iterators (where the return value","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8385,"byte_end":8477,"line_start":136,"line_end":136,"column_start":5,"column_end":97}},{"value":"/ from `next()` borrows the iterator for a bound lifetime).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8482,"byte_end":8543,"line_start":137,"line_end":137,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8548,"byte_end":8551,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` when all fields have been read, or the first error.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8556,"byte_end":8628,"line_start":139,"line_end":139,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9151,"byte_end":9155,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"save","qualname":"<Multipart<R>>::save","value":"pub fn save(&mut Self) -> SaveBuilder<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a builder type for saving the files in this request to the filesystem.","sig":null,"attributes":[{"value":"/ Get a builder type for saving the files in this request to the filesystem.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":8973,"byte_end":9051,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9056,"byte_end":9059,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ See [`SaveBuilder`](save/struct.SaveBuilder.html) for more information.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9064,"byte_end":9139,"line_start":152,"line_end":152,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":402},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10074,"byte_end":10085,"line_start":187,"line_end":187,"column_start":11,"column_end":22},"name":"HttpRequest","qualname":"::server::HttpRequest","value":"HttpRequest","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" A server-side HTTP request that may or may not be multipart.","sig":null,"attributes":[{"value":"/ A server-side HTTP request that may or may not be multipart.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9888,"byte_end":9952,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9953,"byte_end":9956,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ May be implemented by mutable references if providing the request or body by-value is","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9957,"byte_end":10046,"line_start":185,"line_end":185,"column_start":1,"column_end":90}},{"value":"/ undesirable.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10047,"byte_end":10063,"line_start":186,"line_end":186,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":403},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10131,"byte_end":10135,"line_start":189,"line_end":189,"column_start":10,"column_end":14},"name":"Body","qualname":"::server::HttpRequest::Body","value":"type Body: Read;","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" The body of this request.\n","sig":null,"attributes":[{"value":"/ The body of this request.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10092,"byte_end":10121,"line_start":188,"line_end":188,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10465,"byte_end":10483,"line_start":195,"line_end":195,"column_start":8,"column_end":26},"name":"multipart_boundary","qualname":"::server::HttpRequest::multipart_boundary","value":"pub fn multipart_boundary(&Self) -> Option<&str>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Get the boundary string of this request if it is a POST request\n with the `Content-Type` header set to `multipart/form-data`.","sig":null,"attributes":[{"value":"/ Get the boundary string of this request if it is a POST request","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10147,"byte_end":10214,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/ with the `Content-Type` header set to `multipart/form-data`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10219,"byte_end":10283,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10288,"byte_end":10291,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The boundary string should be supplied as an extra value of the `Content-Type` header, e.g.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10296,"byte_end":10391,"line_start":193,"line_end":193,"column_start":5,"column_end":100}},{"value":"/ `Content-Type: multipart/form-data; boundary={boundary}`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10396,"byte_end":10457,"line_start":194,"line_end":194,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10561,"byte_end":10565,"line_start":198,"line_end":198,"column_start":8,"column_end":12},"name":"body","qualname":"::server::HttpRequest::body","value":"pub fn body(Self) -> Self::Body","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Return the request body for reading.\n","sig":null,"attributes":[{"value":"/ Return the request body for reading.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":10513,"byte_end":10553,"line_start":197,"line_end":197,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14728,"byte_end":14742,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":20972,"byte_end":20986,"line_start":231,"line_end":231,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":21077,"byte_end":21091,"line_start":237,"line_end":237,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":21437,"byte_end":21451,"line_start":250,"line_end":250,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":33257,"byte_end":33271,"line_start":46,"line_end":46,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35944,"byte_end":35956,"line_start":126,"line_end":126,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":36724,"byte_end":36735,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39552,"byte_end":39566,"line_start":217,"line_end":217,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41833,"byte_end":41846,"line_start":274,"line_end":274,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42944,"byte_end":42957,"line_start":308,"line_end":308,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":43263,"byte_end":43276,"line_start":317,"line_end":317,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46124,"byte_end":46125,"line_start":395,"line_end":395,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47715,"byte_end":47730,"line_start":451,"line_end":451,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57916,"byte_end":57927,"line_start":143,"line_end":143,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60940,"byte_end":60951,"line_start":219,"line_end":219,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":65998,"byte_end":66009,"line_start":355,"line_end":355,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71704,"byte_end":71713,"line_start":509,"line_end":509,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73118,"byte_end":73127,"line_start":557,"line_end":557,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73222,"byte_end":73231,"line_start":563,"line_end":563,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73559,"byte_end":73569,"line_start":577,"line_end":577,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73837,"byte_end":73847,"line_start":588,"line_end":588,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75028,"byte_end":75035,"line_start":625,"line_end":625,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78156,"byte_end":78163,"line_start":711,"line_end":711,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80522,"byte_end":80529,"line_start":776,"line_end":776,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81203,"byte_end":81216,"line_start":799,"line_end":799,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81313,"byte_end":81326,"line_start":805,"line_end":805,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81405,"byte_end":81418,"line_start":811,"line_end":811,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82896,"byte_end":82910,"line_start":855,"line_end":855,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82996,"byte_end":83010,"line_start":861,"line_end":861,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84412,"byte_end":84429,"line_start":899,"line_end":899,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84753,"byte_end":84763,"line_start":910,"line_end":910,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6142,"byte_end":6151,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6764,"byte_end":6773,"line_start":98,"line_end":98,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9257,"byte_end":9266,"line_start":158,"line_end":158,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9371,"byte_end":9380,"line_start":164,"line_end":164,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/lib.rs","byte_start":3696,"byte_end":3702,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":5920,"byte_end":5924,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":195}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":14728,"byte_end":14742,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":20972,"byte_end":20986,"line_start":231,"line_end":231,"column_start":23,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":21077,"byte_end":21091,"line_start":237,"line_end":237,"column_start":18,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/boundary.rs","byte_start":21437,"byte_end":21451,"line_start":250,"line_end":250,"column_start":21,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":3044}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":33257,"byte_end":33271,"line_start":46,"line_end":46,"column_start":37,"column_end":51},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":35944,"byte_end":35956,"line_start":126,"line_end":126,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":36724,"byte_end":36735,"line_start":151,"line_end":151,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":39552,"byte_end":39566,"line_start":217,"line_end":217,"column_start":20,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":41833,"byte_end":41846,"line_start":274,"line_end":274,"column_start":9,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":42944,"byte_end":42957,"line_start":308,"line_end":308,"column_start":29,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":43263,"byte_end":43276,"line_start":317,"line_end":317,"column_start":32,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3044}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44654,"byte_end":44667,"line_start":354,"line_end":354,"column_start":22,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":157},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":44670,"byte_end":44675,"line_start":354,"line_end":354,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":46124,"byte_end":46125,"line_start":395,"line_end":395,"column_start":23,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/field.rs","byte_start":47715,"byte_end":47730,"line_start":451,"line_end":451,"column_start":27,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":57916,"byte_end":57927,"line_start":143,"line_end":143,"column_start":9,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":60940,"byte_end":60951,"line_start":219,"line_end":219,"column_start":9,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":65998,"byte_end":66009,"line_start":355,"line_end":355,"column_start":17,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":71704,"byte_end":71713,"line_start":509,"line_end":509,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73118,"byte_end":73127,"line_start":557,"line_end":557,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":523},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73222,"byte_end":73231,"line_start":563,"line_end":563,"column_start":24,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":523},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73559,"byte_end":73569,"line_start":577,"line_end":577,"column_start":19,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":296},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":73837,"byte_end":73847,"line_start":588,"line_end":588,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":296},"to":{"krate":1,"index":3044}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":75028,"byte_end":75035,"line_start":625,"line_end":625,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":78156,"byte_end":78163,"line_start":711,"line_end":711,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":80522,"byte_end":80529,"line_start":776,"line_end":776,"column_start":22,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":1831}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81203,"byte_end":81216,"line_start":799,"line_end":799,"column_start":26,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81313,"byte_end":81326,"line_start":805,"line_end":805,"column_start":31,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":81405,"byte_end":81418,"line_start":811,"line_end":811,"column_start":6,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82896,"byte_end":82910,"line_start":855,"line_end":855,"column_start":38,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":1837}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":82996,"byte_end":83010,"line_start":861,"line_end":861,"column_start":20,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84412,"byte_end":84429,"line_start":899,"line_end":899,"column_start":20,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/save.rs","byte_start":84753,"byte_end":84763,"line_start":910,"line_end":910,"column_start":12,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6142,"byte_end":6151,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":6764,"byte_end":6773,"line_start":98,"line_end":98,"column_start":15,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9257,"byte_end":9266,"line_start":158,"line_end":158,"column_start":23,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.16.1/src/server/mod.rs","byte_start":9371,"byte_end":9380,"line_start":164,"line_end":164,"column_start":33,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":378},"to":{"krate":0,"index":157}}]}