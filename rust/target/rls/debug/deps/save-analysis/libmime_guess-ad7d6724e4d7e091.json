{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8","program":"/Users/ludvigellevold/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","mime_guess","/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=ad7d6724e4d7e091","-C","extra-filename=-ad7d6724e4d7e091","--out-dir","/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps","-L","dependency=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps","--extern","mime=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libmime-d02720b6d2d1e0e1.rmeta","--extern","phf=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libphf-1b97f68dd20d1969.rmeta","--extern","unicase=/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libunicase-8a1def0a166f6435.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ludvigellevold/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/ludvigellevold/dev/Privat/parallax/parallax-api/target/rls/debug/deps/libmime_guess-ad7d6724e4d7e091.rmeta"},"prelude":{"crate_id":{"name":"mime_guess","disambiguator":[18033712560056059783,8348147806932868415]},"crate_root":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src","external_crates":[{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5815253344629835555,6636975684073219588]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8640467824410056948,4953413506987166411]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5943306621316194396,469742592009193771]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[866086214759782827,14885900198568415096]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17595028197444962531,15872922328711317016]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18318652027981566244,3398209746559794375]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[175364088999297126,4756653861943254916]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13005419395690637486,15658597275635978548]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[4557001621059672485,7996168842663447033]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16661770112559451689,541399752796634085]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13518603241875248388,3599148159379700321]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1064299617287830167,4730297842045402749]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16564978169562768493,770119258392268500]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7756841733123193348,6168259298993529673]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":15,"id":{"name":"mime","disambiguator":[2529473460999829012,15600422226560269005]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":16,"id":{"name":"log","disambiguator":[18185193510617424094,2460204361763657992]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":17,"id":{"name":"log","disambiguator":[1185960575358268128,12463401203215204625]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[11132457372621768611,10169276994104157058]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":19,"id":{"name":"phf","disambiguator":[8831633099146252180,11795432016611431379]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":20,"id":{"name":"phf_shared","disambiguator":[2322674856384119484,9458704706837348865]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":21,"id":{"name":"siphasher","disambiguator":[16880972931089089737,6753285573736160644]}},{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","num":22,"id":{"name":"unicase","disambiguator":[12498455003886648723,16256863554804238691]}}],"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":0,"byte_end":9340,"line_start":1,"line_end":276,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":35},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":795,"byte_end":799,"line_start":19,"line_end":19,"column_start":15,"column_end":19},"alias_span":null,"name":"Mime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":36},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":795,"byte_end":799,"line_start":19,"line_end":19,"column_start":15,"column_end":19},"alias_span":null,"name":"Mime","value":"","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":0,"byte_end":9340,"line_start":1,"line_end":276,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":33},{"krate":0,"index":7},{"krate":0,"index":35},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":10},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Guessing of MIME types by file extension.","sig":null,"attributes":[{"value":"! Guessing of MIME types by file extension.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Uses a static list of file-extension : MIME type mappings.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":50,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":113,"byte_end":116,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! #### Note: MIME Types Returned Are Not Stable/Guaranteed","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":117,"byte_end":177,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"! The media types returned for a given extension are not considered to be part of the crate's","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":178,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"! stable API and are often updated in patch (#.#.x) releases to be as correct as possible.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":274,"byte_end":366,"line_start":7,"line_end":7,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":367,"byte_end":370,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Additionally, only the extensions of paths/filenames are inspected in order to guess the MIME","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":371,"byte_end":468,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"! type. The file that may or may not reside at that path may or may not be a valid file of the","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":469,"byte_end":565,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"! returned MIME type.  Be wary of unsafe or un-validated assumptions about file structure or","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":566,"byte_end":660,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"! length.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":661,"byte_end":672,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1808,"byte_end":1823,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"guess_mime_type","qualname":"::guess_mime_type","value":"pub fn guess_mime_type<P: AsRef<Path>>(P) -> Mime","parent":null,"children":[],"decl_id":null,"docs":" Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).","sig":null,"attributes":[{"value":"/ Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1260,"byte_end":1347,"line_start":46,"line_end":46,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1348,"byte_end":1351,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If `path` has no extension, or its extension has no known MIME type mapping,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1352,"byte_end":1432,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ then the MIME type is assumed to be `application/octet-stream`.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1433,"byte_end":1500,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1501,"byte_end":1504,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1505,"byte_end":1516,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ **Guess** is the operative word here, as there are no guarantees that the contents of the file","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1517,"byte_end":1615,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ that `path` points to match the MIME type associated with the path's extension.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1616,"byte_end":1699,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1700,"byte_end":1703,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Take care when processing files with assumptions based on the return value of this function.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1704,"byte_end":1800,"line_start":55,"line_end":55,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2439,"byte_end":2458,"line_start":71,"line_end":71,"column_start":8,"column_end":27},"name":"guess_mime_type_opt","qualname":"::guess_mime_type_opt","value":"pub fn guess_mime_type_opt<P: AsRef<Path>>(P) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).","sig":null,"attributes":[{"value":"/ Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":1930,"byte_end":2017,"line_start":61,"line_end":61,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2018,"byte_end":2021,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If `path` has no extension, or its extension has no known MIME type mapping,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2022,"byte_end":2102,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ then `None` is returned.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2103,"byte_end":2131,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2132,"byte_end":2135,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2136,"byte_end":2147,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ **Guess** is the operative word here, as there are no guarantees that the contents of the file","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2148,"byte_end":2246,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"/ that `path` points to match the MIME type associated with the path's extension.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2247,"byte_end":2330,"line_start":68,"line_end":68,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2331,"byte_end":2334,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Take care when processing files with assumptions based on the return value of this function.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2335,"byte_end":2431,"line_start":70,"line_end":70,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2792,"byte_end":2805,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"get_mime_type","qualname":"::get_mime_type","value":"pub fn get_mime_type(&str) -> Mime","parent":null,"children":[],"decl_id":null,"docs":" Get the MIME type associated with a file extension.","sig":null,"attributes":[{"value":"/ Get the MIME type associated with a file extension.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2612,"byte_end":2667,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2668,"byte_end":2671,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If there is no association for the extension, or `ext` is empty,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2672,"byte_end":2740,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ `application/octet-stream` is returned.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2741,"byte_end":2784,"line_start":80,"line_end":80,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3069,"byte_end":3086,"line_start":90,"line_end":90,"column_start":8,"column_end":25},"name":"get_mime_type_opt","qualname":"::get_mime_type_opt","value":"pub fn get_mime_type_opt(&str) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Get the MIME type associated with a file extension.","sig":null,"attributes":[{"value":"/ Get the MIME type associated with a file extension.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2909,"byte_end":2964,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2965,"byte_end":2968,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ If there is no association for the extension, or `ext` is empty,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":2969,"byte_end":3037,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3038,"byte_end":3061,"line_start":89,"line_end":89,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3503,"byte_end":3520,"line_start":101,"line_end":101,"column_start":8,"column_end":25},"name":"get_mime_type_str","qualname":"::get_mime_type_str","value":"pub fn get_mime_type_str(&str) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the MIME type string associated with a file extension. Case-insensitive.","sig":null,"attributes":[{"value":"/ Get the MIME type string associated with a file extension. Case-insensitive.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3211,"byte_end":3291,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ If `search_ext` is not already lowercase,","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3296,"byte_end":3341,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/ it will be converted to lowercase to facilitate the search.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3342,"byte_end":3405,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3406,"byte_end":3409,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if `search_ext` is empty or an associated extension was not found.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3410,"byte_end":3495,"line_start":100,"line_end":100,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4097,"byte_end":4116,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"get_mime_extensions","qualname":"::get_mime_extensions","value":"pub fn get_mime_extensions(&Mime) -> Option<&'static [&'static str]>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of known extensions for a given `Mime`. ","sig":null,"attributes":[{"value":"/ Get a list of known extensions for a given `Mime`. ","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3664,"byte_end":3719,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3720,"byte_end":3723,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Ignores parameters (only searches with `<main type>/<subtype>`). Case-insensitive (for extension types).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3724,"byte_end":3832,"line_start":109,"line_end":109,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3833,"byte_end":3836,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the MIME type is unknown. ","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3837,"byte_end":3885,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3886,"byte_end":3889,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Wildcards","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3890,"byte_end":3907,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/ If the top-level of the MIME type is a wildcard (`*`), returns all extensions.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3908,"byte_end":3990,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3991,"byte_end":3994,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ If the sub-level of the MIME type is a wildcard, returns all extensions for the top-level.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":3995,"byte_end":4089,"line_start":116,"line_end":116,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4702,"byte_end":4725,"line_start":134,"line_end":134,"column_start":8,"column_end":31},"name":"get_mime_extensions_str","qualname":"::get_mime_extensions_str","value":"pub fn get_mime_extensions_str(&str) -> Option<&'static [&'static str]>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of known extensions for a MIME type string. ","sig":null,"attributes":[{"value":"/ Get a list of known extensions for a MIME type string. ","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4211,"byte_end":4270,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4271,"byte_end":4274,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Ignores parameters (only searches `<main type>/<subtype>`). Case-insensitive.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4275,"byte_end":4356,"line_start":123,"line_end":123,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4357,"byte_end":4360,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the MIME type is unknown.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4361,"byte_end":4408,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4409,"byte_end":4413,"line_start":126,"line_end":126,"column_start":1,"column_end":5}},{"value":"/ ### Wildcards","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4414,"byte_end":4431,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"/ If the top-level of the MIME type is a wildcard (`*`), returns all extensions.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4432,"byte_end":4514,"line_start":128,"line_end":128,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4515,"byte_end":4518,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the sub-level of the MIME type is a wildcard, returns all extensions for the top-level.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4519,"byte_end":4613,"line_start":130,"line_end":130,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4614,"byte_end":4617,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ### Panics","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4618,"byte_end":4632,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/ If `mime_str` is not a valid MIME type specifier (naive).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":4633,"byte_end":4694,"line_start":133,"line_end":133,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5470,"byte_end":5484,"line_start":158,"line_end":158,"column_start":8,"column_end":22},"name":"get_extensions","qualname":"::get_extensions","value":"pub fn get_extensions(&str, &str) -> Option<&'static [&'static str]>","parent":null,"children":[],"decl_id":null,"docs":" Get the extensions for a given top-level and sub-level of a MIME type\n (`{toplevel}/{sublevel}`).","sig":null,"attributes":[{"value":"/ Get the extensions for a given top-level and sub-level of a MIME type","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5090,"byte_end":5163,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"/ (`{toplevel}/{sublevel}`).","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5164,"byte_end":5194,"line_start":150,"line_end":150,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5195,"byte_end":5198,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if `toplevel` or `sublevel` are unknown.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5199,"byte_end":5258,"line_start":152,"line_end":152,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5259,"byte_end":5262,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ### Wildcards","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5263,"byte_end":5280,"line_start":154,"line_end":154,"column_start":1,"column_end":18}},{"value":"/ If the top-level of the MIME type is a wildcard (`*`), returns all extensions.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5281,"byte_end":5363,"line_start":155,"line_end":155,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5364,"byte_end":5367,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ If the sub-level of the MIME type is a wildcard, returns all extensions for the top-level.","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5368,"byte_end":5462,"line_start":157,"line_end":157,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5943,"byte_end":5955,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"octet_stream","qualname":"::octet_stream","value":"pub fn octet_stream() -> Mime","parent":null,"children":[],"decl_id":null,"docs":" Get the MIME type for `application/octet-stream` (generic binary stream)\n","sig":null,"attributes":[{"value":"/ Get the MIME type for `application/octet-stream` (generic binary stream)","span":{"file_name":"/Users/ludvigellevold/.cargo/registry/src/github.com-1ecc6299db9ec823/mime_guess-1.8.8/src/lib.rs","byte_start":5859,"byte_end":5935,"line_start":173,"line_end":173,"column_start":1,"column_end":77}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}